{"remainingRequest":"C:\\Users\\lucky\\Desktop\\K-Test-Tracker-Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lucky\\Desktop\\K-Test-Tracker-Frontend\\src\\views\\TestMarker.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\lucky\\Desktop\\K-Test-Tracker-Frontend\\src\\views\\TestMarker.vue","mtime":1655277426996},{"path":"C:\\Users\\lucky\\Desktop\\K-Test-Tracker-Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655277640760},{"path":"C:\\Users\\lucky\\Desktop\\K-Test-Tracker-Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1655277642997},{"path":"C:\\Users\\lucky\\Desktop\\K-Test-Tracker-Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655277640760},{"path":"C:\\Users\\lucky\\Desktop\\K-Test-Tracker-Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1655277613826}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgRGF0YVJvdyBmcm9tICIuLi9jb21wb25lbnRzL0RhdGFSb3cudnVlIjsNCmltcG9ydCBGaWxlSWNvbiBmcm9tICIuLi9jb21wb25lbnRzL0ZpbGVJY29uLnZ1ZSI7DQppbXBvcnQgU2F2ZU1vZGFsIGZyb20gIi4uL2NvbXBvbmVudHMvU2F2ZU1vZGFsLnZ1ZSI7DQppbXBvcnQgUmVwb3NpdG9yeSBmcm9tICIuLi9zZXJ2aWNlcy9SZXBvc2l0b3J5IjsNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBDb21tZW50TGVuZ3RoQnJlYWtwb2ludDogNjAsDQogICAgICBUZXN0RGF0YToge30sDQogICAgICB0ZXN0TG9hZGVkOiBmYWxzZSwNCiAgICB9Ow0KICB9LA0KICBjb21wb25lbnRzOiB7DQogICAgRGF0YVJvdywNCiAgICBGaWxlSWNvbiwNCiAgICBTYXZlTW9kYWwsDQogIH0sDQogIG5hbWU6ICJUZXN0TWFya2VyIiwNCiAgY3JlYXRlZCgpIHsNCiAgICAvL2ZldGNoIHRoZSB0ZXN0IGRhdGENCiAgICBsZXQgdGVzdF9pZCA9IHRoaXMuJHJvdXRlLnBhcmFtcy5pZDsNCg0KICAgIFJlcG9zaXRvcnkuZ2V0KGB0ZXN0LyR7dGVzdF9pZH1gKQ0KICAgICAgLnRoZW4oKHIpID0+IHsNCiAgICAgICAgdGhpcy5UZXN0RGF0YSA9IHIuZGF0YTsNCiAgICAgICAgdGhpcy50ZXN0TG9hZGVkID0gdHJ1ZTsNCg0KICAgICAgICBpZiAoIXRoaXMuVGVzdERhdGEuZmluYWxfcmVzdWx0c19zdWJtaXR0ZWQpDQogICAgICAgICAgdGhpcy5hdXRvc2F2ZSA9IHNldEludGVydmFsKCgpID0+IHRoaXMuc2F2ZU1hcmtzKGZhbHNlKSwgMTAwMDApOw0KICAgICAgfSkNCiAgICAgIC5jYXRjaCgoZSkgPT4gZSk7DQogIH0sDQogIG1vdW50ZWQoKSB7DQogICAgLy9TaG91bGQgb25seSBhdXRvIHNhdmUgZm9yIHRoZSBhc3NpZ25lZCB1c2VyDQogICAgbGV0IGFzc2lnbmVkX3VzZXJfaXNfYXV0aGVkX3VzZXIgPQ0KICAgICAgdGhpcy5UZXN0RGF0YS5tYXJrZXJfZW1haWwgPT0gdGhpcy4kYXV0aC51c2VyLmVtYWlsOw0KICAgIGlmICghYXNzaWduZWRfdXNlcl9pc19hdXRoZWRfdXNlcikgY2xlYXJJbnRlcnZhbCh0aGlzLmF1dG9zYXZlKTsNCiAgfSwNCiAgY29tcHV0ZWQ6IHsNCiAgICBTaG93Q29tbWVudHNDb2x1bW4oKSB7DQogICAgICByZXR1cm4gdGhpcy5UZXN0RGF0YS5SZXN1bHQuc29tZSgocikgPT4gci5lZGl0b3JfY29tbWVudCAhPSAiIik7DQogICAgfSwNCiAgICBEZWNpc2lvbigpIHsNCiAgICAgIGlmICghdGhpcy50ZXN0TG9hZGVkKSB7DQogICAgICAgIHJldHVybiAiTG9hZGluZy4uLiI7DQogICAgICB9DQoNCiAgICAgIGlmICh0aGlzLkNvcnJlY3RQZXJjZW50IC8gMTAwID49IHRoaXMuVGVzdERhdGEuVGVzdFR5cGUuaGlnaF9wYXNzX3JhdGUpIHsNCiAgICAgICAgcmV0dXJuICJEaXN0aW5jdGlvbiI7DQogICAgICB9IGVsc2UgaWYgKA0KICAgICAgICB0aGlzLkNvcnJlY3RQZXJjZW50IC8gMTAwID49DQogICAgICAgIHRoaXMuVGVzdERhdGEuVGVzdFR5cGUucGFzc19yYXRlDQogICAgICApIHsNCiAgICAgICAgcmV0dXJuICJQYXNzIjsNCiAgICAgIH0gZWxzZSBpZiAoDQogICAgICAgIHRoaXMuQ29ycmVjdFBlcmNlbnQgLyAxMDAgPj0NCiAgICAgICAgdGhpcy5UZXN0RGF0YS5UZXN0VHlwZS5mYWlsX3JhdGUNCiAgICAgICkgew0KICAgICAgICByZXR1cm4gIkZhaWwiOw0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgcmV0dXJuICJGYWlsIjsNCiAgICAgIH0NCiAgICB9LA0KICAgIENvcnJlY3QoKSB7DQogICAgICByZXR1cm4gKA0KICAgICAgICB0aGlzLnRlc3RMb2FkZWQgJiYNCiAgICAgICAgdGhpcy5UZXN0RGF0YS5SZXN1bHQuZmlsdGVyKChxKSA9PiBxLnBhc3NlZCkNCiAgICAgICAgICAubWFwKChxKSA9PiBxLm1hcmtzKQ0KICAgICAgICAgIC5yZWR1Y2UoKGEsIGIpID0+IGEgKyBiLCAwKQ0KICAgICAgKTsNCiAgICB9LA0KICAgIENvcnJlY3RQZXJjZW50KCkgew0KICAgICAgcmV0dXJuICgNCiAgICAgICAgdGhpcy50ZXN0TG9hZGVkICYmDQogICAgICAgICgodGhpcy5Db3JyZWN0IC8gdGhpcy5DYWxjdWxhdGVkVG90YWxNYXJrcykgKiAxMDApLnRvRml4ZWQoMSkNCiAgICAgICk7DQogICAgfSwNCiAgICBOdW1Vbm1hcmtlZCgpIHsNCiAgICAgIHJldHVybiAoDQogICAgICAgIHRoaXMudGVzdExvYWRlZCAmJg0KICAgICAgICB0aGlzLlRlc3REYXRhLlJlc3VsdC5maWx0ZXIoDQogICAgICAgICAgKHEpID0+IHEucGFzc2VkID09PSB1bmRlZmluZWQgfHwgcS5wYXNzZWQgPT09IG51bGwNCiAgICAgICAgKS5sZW5ndGgNCiAgICAgICk7DQogICAgfSwNCiAgICBDYWxjdWxhdGVkVG90YWxNYXJrcygpIHsNCiAgICAgIGlmICghdGhpcy50ZXN0TG9hZGVkKSB7DQogICAgICAgIHJldHVybiAwOw0KICAgICAgfQ0KDQogICAgICBsZXQgc3VtID0gMDsNCiAgICAgIHRoaXMuVGVzdERhdGEuUmVzdWx0LmZvckVhY2goKHIpID0+IChzdW0gKz0gclsibWFya3MiXSkpOw0KICAgICAgcmV0dXJuIHN1bTsNCiAgICB9LA0KICB9LA0KICBiZWZvcmVEZXN0cm95KCkgew0KICAgIGNsZWFySW50ZXJ2YWwodGhpcy5hdXRvc2F2ZSk7DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBzdWJtaXRNYXJrcygpIHsNCiAgICAgIGxldCB0ZXN0SUQgPSB0aGlzLiRyb3V0ZS5wYXJhbXMuaWQ7DQoNCiAgICAgIC8vdmVyaWZ5IHRoYXQgYWxsIHF1ZXN0aW9ucyBhcmUgYXNzZXNzZWQNCiAgICAgIGxldCBhbnlVbm1hcmtlZCA9IHRoaXMuVGVzdERhdGEuUmVzdWx0LnNvbWUoKHIpID0+IHsNCiAgICAgICAgci5wYXNzZWQgPT09IG51bGwgfHwgci5wYXNzZWQgPT09IHVuZGVmaW5lZDsNCiAgICAgIH0pOw0KDQogICAgICBpZiAoYW55VW5tYXJrZWQpIHsNCiAgICAgICAgcmV0dXJuOw0KICAgICAgfQ0KDQogICAgICAvL2NvbXBpbGUgdGhlIHJlc3VsdHMNCiAgICAgIGxldCByZXN1bHRzID0gW107DQogICAgICB0aGlzLlRlc3REYXRhLlJlc3VsdC5mb3JFYWNoKChyKSA9PiB7DQogICAgICAgIGxldCByZXN1bHRPYmplY3QgPSB7DQogICAgICAgICAgcmVzdWx0X2lkOiByLnJlc3VsdF9pZCwNCiAgICAgICAgICBwYXNzZWQ6IHIucGFzc2VkLA0KICAgICAgICAgIG1hcmtlZDogdHJ1ZSwgLy9hYm92ZSBsb2dpYyBzaG91bGQgZ3VhcmFudGVlIHRoYXQgdGhpcyBpcyBhbHdheXMgdHJ1ZQ0KICAgICAgICAgIGVkaXRvcl9jb21tZW50czogci5lZGl0b3JfY29tbWVudHMsDQogICAgICAgICAgbWFya2VyX3JlbWFya3M6IHIubWFya2VyX3JlbWFya3MsDQogICAgICAgIH07DQogICAgICAgIHJlc3VsdHMucHVzaChyZXN1bHRPYmplY3QpOw0KICAgICAgfSk7DQoNCiAgICAgIFJlcG9zaXRvcnkucHV0KGB0ZXN0LyR7dGVzdElEfT9zdWJtaXQ9dHJ1ZWAsIHsNCiAgICAgICAgcmVzdWx0czogcmVzdWx0cywNCiAgICAgICAgZGVjaXNpb246IHRoaXMuRGVjaXNpb24sDQogICAgICAgIHNjb3JlOiB0aGlzLkNvcnJlY3RQZXJjZW50IC8gMTAwLA0KICAgICAgICBnZW5lcmFsX2NvbW1lbnRzOiB0aGlzLlRlc3REYXRhLmdlbmVyYWxfY29tbWVudHMsDQogICAgICAgIG1hcmtlcl9lbWFpbDogdGhpcy4kYXV0aC51c2VyLmVtYWlsLA0KICAgICAgfSkNCiAgICAgICAgLnRoZW4oKHIpID0+IHsNCiAgICAgICAgICByOw0KICAgICAgICAgIHRoaXMuJHJvdXRlci5nbyh7IG5hbWU6ICJNYXJrZWRUZXN0IiwgcGFyYW1zOiB7IGlkOiB0ZXN0SUQgfSB9KTsNCiAgICAgICAgICB0aGlzLiRub3RpZnkoew0KICAgICAgICAgICAgdGl0bGU6ICJSZXN1bHRzIFN1Y2Nlc3NmdWxseSBTdWJtaXR0ZWQiLA0KICAgICAgICAgICAgdGV4dDogIiIsDQogICAgICAgICAgICB0eXBlOiAiaW5mbyIsDQogICAgICAgICAgfSk7DQoNCiAgICAgICAgICBjbGVhckludGVydmFsKHRoaXMuYXV0b3NhdmUpOw0KICAgICAgICB9KQ0KICAgICAgICAuY2F0Y2goKGUpID0+IHsNCiAgICAgICAgICB0aGlzLiRub3RpZnkoew0KICAgICAgICAgICAgdGl0bGU6ICJFcnJvciBTdWJtaXR0ZWQgUmVzdWx0cyIsDQogICAgICAgICAgICB0ZXh0OiBlLA0KICAgICAgICAgICAgdHlwZTogImVycm9yIiwNCiAgICAgICAgICB9KTsNCg0KICAgICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5hdXRvc2F2ZSk7DQogICAgICAgIH0pOw0KICAgIH0sDQogICAgc2F2ZU1hcmtzKHNob3dOb3RpZmljYXRpb24pIHsNCiAgICAgIGxldCB0ZXN0SUQgPSB0aGlzLiRyb3V0ZS5wYXJhbXMuaWQ7DQoNCiAgICAgIGxldCByZXN1bHRzID0gW107DQogICAgICB0aGlzLlRlc3REYXRhLlJlc3VsdC5mb3JFYWNoKChyKSA9PiB7DQogICAgICAgIGxldCByZXN1bHRPYmplY3QgPSB7DQogICAgICAgICAgcmVzdWx0X2lkOiByLnJlc3VsdF9pZCwNCiAgICAgICAgICBwYXNzZWQ6IHIucGFzc2VkLA0KICAgICAgICAgIG1hcmtlZDogci5wYXNzZWQgPT09IG51bGwgfHwgci5wYXNzZWQgPT09IHVuZGVmaW5lZCA/IGZhbHNlIDogdHJ1ZSwNCiAgICAgICAgfTsNCiAgICAgICAgcmVzdWx0cy5wdXNoKHJlc3VsdE9iamVjdCk7DQogICAgICB9KTsNCg0KICAgICAgUmVwb3NpdG9yeS5wdXQoYHRlc3QvJHt0ZXN0SUR9YCwgew0KICAgICAgICByZXN1bHRzOiByZXN1bHRzLA0KICAgICAgICBnZW5lcmFsX2NvbW1lbnRzOiB0aGlzLlRlc3REYXRhLmdlbmVyYWxfY29tbWVudHMsDQogICAgICB9KQ0KICAgICAgICAudGhlbigocikgPT4gew0KICAgICAgICAgIHI7DQogICAgICAgICAgaWYgKHNob3dOb3RpZmljYXRpb24pDQogICAgICAgICAgICB0aGlzLiRub3RpZnkoew0KICAgICAgICAgICAgICB0aXRsZTogIlRlc3QgU3VjY2Vzc2Z1bGx5IFNhdmVkIiwNCiAgICAgICAgICAgICAgdGV4dDogIlJlc3VsdHMgd2lsbCBiZSBoZXJlIHdoZW4geW91IGdldCBiYWNrIiwNCiAgICAgICAgICAgICAgdHlwZTogImluZm8iLA0KICAgICAgICAgICAgfSk7DQogICAgICAgIH0pDQogICAgICAgIC5jYXRjaCgoZSkgPT4gew0KICAgICAgICAgIHRoaXMuJG5vdGlmeSh7DQogICAgICAgICAgICB0aXRsZTogIkVycm9yIFNhdmluZyBUZXN0IiwNCiAgICAgICAgICAgIHRleHQ6IGUsDQogICAgICAgICAgICB0eXBlOiAiZXJyb3IiLA0KICAgICAgICAgIH0pOw0KDQogICAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLmF1dG9zYXZlKTsNCiAgICAgICAgfSk7DQogICAgfSwNCiAgfSwNCn07DQo="},{"version":3,"sources":["TestMarker.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"TestMarker.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"test-marker-grid\">\r\n      <div class=\"test-marker-channel-1\">\r\n        <div class=\"test-marker-score-overview\">\r\n          <div class=\"score-section\">\r\n            <h5>Overall Score</h5>\r\n            <span\r\n              >{{ Correct }}/{{ CalculatedTotalMarks }}\r\n              <span style=\"font-size: 11px\">({{ CorrectPercent }}%)</span></span\r\n            >\r\n          </div>\r\n          <div class=\"score-section\">\r\n            <h5>Boundaries</h5>\r\n            <ul class=\"boundary-list\">\r\n              <li\r\n                :class=\"\r\n                  CorrectPercent >= TestData.TestType.high_pass_rate * 100\r\n                    ? 'boundary-text-active'\r\n                    : 'boundary-text'\r\n                \"\r\n              >\r\n                Distinction {{ TestData.TestType.high_pass_rate * 100 }}%\r\n              </li>\r\n              <li\r\n                :class=\"\r\n                  CorrectPercent >= TestData.TestType.pass_rate * 100 &&\r\n                  CorrectPercent < TestData.TestType.high_pass_rate * 100\r\n                    ? 'boundary-text-active'\r\n                    : 'boundary-text'\r\n                \"\r\n              >\r\n                Pass {{ TestData.TestType.pass_rate * 100 }}%\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"score-section\">\r\n            <h5>Overall Decision</h5>\r\n            <span>{{ Decision }}</span>\r\n          </div>\r\n          <div\r\n            :class=\"\r\n              !TestData.final_results_submitted\r\n                ? 'secondary-button pointer'\r\n                : 'inactive-button notallowed-pointer'\r\n            \"\r\n            data-target=\"#exampleModalLong\"\r\n            data-toggle=\"modal\"\r\n          >\r\n            Submit Marks\r\n          </div>\r\n          <div\r\n            style=\"margin-top: 12px\"\r\n            class=\"pointer tertiary-button\"\r\n            @click=\"saveMarks(true)\"\r\n            v-show=\"!TestData.final_results_submitted\"\r\n          >\r\n            Save Marks\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"test-marker-channel-2\">\r\n        <div class=\"test-marker-test-overview\">\r\n          <div class=\"overview-header\">\r\n            <h5>\r\n              {{\r\n                !TestData.final_results_submitted\r\n                  ? \"Pending Results\"\r\n                  : \"Already Marked\"\r\n              }}\r\n            </h5>\r\n            <h4>{{ TestData.TestType.test_type_name }}</h4>\r\n            <p>{{ TestData.TestType.test_type_description }}</p>\r\n            <DataRow\r\n              v-if=\"false\"\r\n              :fieldName=\"'Editor Comments'\"\r\n              :fieldData=\"TestData.candidate_comments\"\r\n            />\r\n          </div>\r\n          <hr v-show=\"false\" />\r\n          <div class=\"overview-field-grid\">\r\n            <div>\r\n              <DataRow\r\n                :fieldName=\"'Email'\"\r\n                :fieldData=\"\r\n                  TestData.candidate_email ? TestData.candidate_email : '-'\r\n                \"\r\n              />\r\n              <DataRow\r\n                :fieldName=\"'ProofedID'\"\r\n                :fieldData=\"TestData.proofed_id\"\r\n                :linkURL=\"`https://team.getproofed.com/editors/edit/${TestData.proofed_id}`\"\r\n              />\r\n              <DataRow\r\n                :fieldName=\"'Attempt Num'\"\r\n                :fieldData=\"TestData.attempt_num\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <DataRow\r\n                :fieldName=\"'Track Change & Clean Copy'\"\r\n                :fieldData=\"\r\n                  TestData.track_change_url\r\n                    ? 'Click to Download'\r\n                    : 'Not Uploaded'\r\n                \"\r\n                :linkURL=\"TestData.track_change_url\"\r\n              />\r\n              <!-- <DataRow\r\n                :fieldName=\"'Clean Copy'\"\r\n                :fieldData=\"\r\n                  TestData.clean_copy_url ? 'Click to Download' : 'Not Uploaded'\r\n                \"\r\n                :linkURL=\"TestData.clean_copy_url\"\r\n              /> -->\r\n              <DataRow\r\n                v-if=\"true\"\r\n                :fieldName=\"'Editor Comments'\"\r\n                :fieldData=\"TestData.candidate_comments\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"test-marker-test-overview\" style=\"margin-top: 12px\">\r\n          <span style=\"font-size: 12px; margin: 0 0 20px 12px\">Comments</span>\r\n          <textarea\r\n            :disabled=\"TestData.final_results_submitted\"\r\n            type=\"textarea\"\r\n            v-model=\"TestData.general_comments\"\r\n            class=\"tt-text-area\"\r\n            placeholder=\"Comments to Candidate\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"marking-tool\">\r\n          <table class=\"marking-tool-table\">\r\n            <thead>\r\n              <td>Q. Num</td>\r\n              <td v-if=\"ShowCommentsColumn\">Editor Comments</td>\r\n              <td>Reviewer Remarks</td>\r\n              <td width=\"90\">\r\n                <img\r\n                  @click=\"saveMarks(true)\"\r\n                  style=\"margin: 0 auto; cursor: pointer\"\r\n                  src=\"https://aux4.iconspalace.com/uploads/950447276790987536.png\"\r\n                  width=\"30\"\r\n                  v-show=\"!TestData.final_results_submitted\"\r\n                />\r\n              </td>\r\n            </thead>\r\n\r\n            <tr\r\n              v-for=\"Result in TestData.Result\"\r\n              :key=\"Result.ID\"\r\n              :style=\"\r\n                Result.passed === true\r\n                  ? 'background-color: #AADBC9'\r\n                  : Result.passed === false\r\n                  ? 'background-color: #FFE1E1'\r\n                  : ''\r\n              \"\r\n            >\r\n              <td>{{ Result.question_id }} {{ Result.marks }} mark</td>\r\n              <td v-if=\"ShowCommentsColumn\">{{ Result.editor_comments }}</td>\r\n              <td>{{ Result.marker_remarks }}</td>\r\n              <td>\r\n                <label\r\n                  class=\"default-radio\"\r\n                  v-show=\"!TestData.final_results_submitted\"\r\n                >\r\n                  <input type=\"radio\" :value=\"false\" v-model=\"Result.passed\" />\r\n                </label>\r\n\r\n                <label\r\n                  :class=\"{ redborder: false === true }\"\r\n                  v-show=\"!TestData.final_results_submitted\"\r\n                >\r\n                  <input type=\"radio\" :value=\"true\" v-model=\"Result.passed\" />\r\n                </label>\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <SaveModal\r\n      @onSubmit=\"submitMarks()\"\r\n      :alreadyMarked=\"TestData.final_results_submitted\"\r\n    />\r\n    <div id=\"save-snackbar\" class=\"snackbar\">Test Successfully Saved</div>\r\n    <div id=\"submitted-snackbar\" class=\"snackbar\">\r\n      Test Successfully Submitted\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport DataRow from \"../components/DataRow.vue\";\r\nimport FileIcon from \"../components/FileIcon.vue\";\r\nimport SaveModal from \"../components/SaveModal.vue\";\r\nimport Repository from \"../services/Repository\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      CommentLengthBreakpoint: 60,\r\n      TestData: {},\r\n      testLoaded: false,\r\n    };\r\n  },\r\n  components: {\r\n    DataRow,\r\n    FileIcon,\r\n    SaveModal,\r\n  },\r\n  name: \"TestMarker\",\r\n  created() {\r\n    //fetch the test data\r\n    let test_id = this.$route.params.id;\r\n\r\n    Repository.get(`test/${test_id}`)\r\n      .then((r) => {\r\n        this.TestData = r.data;\r\n        this.testLoaded = true;\r\n\r\n        if (!this.TestData.final_results_submitted)\r\n          this.autosave = setInterval(() => this.saveMarks(false), 10000);\r\n      })\r\n      .catch((e) => e);\r\n  },\r\n  mounted() {\r\n    //Should only auto save for the assigned user\r\n    let assigned_user_is_authed_user =\r\n      this.TestData.marker_email == this.$auth.user.email;\r\n    if (!assigned_user_is_authed_user) clearInterval(this.autosave);\r\n  },\r\n  computed: {\r\n    ShowCommentsColumn() {\r\n      return this.TestData.Result.some((r) => r.editor_comment != \"\");\r\n    },\r\n    Decision() {\r\n      if (!this.testLoaded) {\r\n        return \"Loading...\";\r\n      }\r\n\r\n      if (this.CorrectPercent / 100 >= this.TestData.TestType.high_pass_rate) {\r\n        return \"Distinction\";\r\n      } else if (\r\n        this.CorrectPercent / 100 >=\r\n        this.TestData.TestType.pass_rate\r\n      ) {\r\n        return \"Pass\";\r\n      } else if (\r\n        this.CorrectPercent / 100 >=\r\n        this.TestData.TestType.fail_rate\r\n      ) {\r\n        return \"Fail\";\r\n      } else {\r\n        return \"Fail\";\r\n      }\r\n    },\r\n    Correct() {\r\n      return (\r\n        this.testLoaded &&\r\n        this.TestData.Result.filter((q) => q.passed)\r\n          .map((q) => q.marks)\r\n          .reduce((a, b) => a + b, 0)\r\n      );\r\n    },\r\n    CorrectPercent() {\r\n      return (\r\n        this.testLoaded &&\r\n        ((this.Correct / this.CalculatedTotalMarks) * 100).toFixed(1)\r\n      );\r\n    },\r\n    NumUnmarked() {\r\n      return (\r\n        this.testLoaded &&\r\n        this.TestData.Result.filter(\r\n          (q) => q.passed === undefined || q.passed === null\r\n        ).length\r\n      );\r\n    },\r\n    CalculatedTotalMarks() {\r\n      if (!this.testLoaded) {\r\n        return 0;\r\n      }\r\n\r\n      let sum = 0;\r\n      this.TestData.Result.forEach((r) => (sum += r[\"marks\"]));\r\n      return sum;\r\n    },\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.autosave);\r\n  },\r\n  methods: {\r\n    submitMarks() {\r\n      let testID = this.$route.params.id;\r\n\r\n      //verify that all questions are assessed\r\n      let anyUnmarked = this.TestData.Result.some((r) => {\r\n        r.passed === null || r.passed === undefined;\r\n      });\r\n\r\n      if (anyUnmarked) {\r\n        return;\r\n      }\r\n\r\n      //compile the results\r\n      let results = [];\r\n      this.TestData.Result.forEach((r) => {\r\n        let resultObject = {\r\n          result_id: r.result_id,\r\n          passed: r.passed,\r\n          marked: true, //above logic should guarantee that this is always true\r\n          editor_comments: r.editor_comments,\r\n          marker_remarks: r.marker_remarks,\r\n        };\r\n        results.push(resultObject);\r\n      });\r\n\r\n      Repository.put(`test/${testID}?submit=true`, {\r\n        results: results,\r\n        decision: this.Decision,\r\n        score: this.CorrectPercent / 100,\r\n        general_comments: this.TestData.general_comments,\r\n        marker_email: this.$auth.user.email,\r\n      })\r\n        .then((r) => {\r\n          r;\r\n          this.$router.go({ name: \"MarkedTest\", params: { id: testID } });\r\n          this.$notify({\r\n            title: \"Results Successfully Submitted\",\r\n            text: \"\",\r\n            type: \"info\",\r\n          });\r\n\r\n          clearInterval(this.autosave);\r\n        })\r\n        .catch((e) => {\r\n          this.$notify({\r\n            title: \"Error Submitted Results\",\r\n            text: e,\r\n            type: \"error\",\r\n          });\r\n\r\n          clearInterval(this.autosave);\r\n        });\r\n    },\r\n    saveMarks(showNotification) {\r\n      let testID = this.$route.params.id;\r\n\r\n      let results = [];\r\n      this.TestData.Result.forEach((r) => {\r\n        let resultObject = {\r\n          result_id: r.result_id,\r\n          passed: r.passed,\r\n          marked: r.passed === null || r.passed === undefined ? false : true,\r\n        };\r\n        results.push(resultObject);\r\n      });\r\n\r\n      Repository.put(`test/${testID}`, {\r\n        results: results,\r\n        general_comments: this.TestData.general_comments,\r\n      })\r\n        .then((r) => {\r\n          r;\r\n          if (showNotification)\r\n            this.$notify({\r\n              title: \"Test Successfully Saved\",\r\n              text: \"Results will be here when you get back\",\r\n              type: \"info\",\r\n            });\r\n        })\r\n        .catch((e) => {\r\n          this.$notify({\r\n            title: \"Error Saving Test\",\r\n            text: e,\r\n            type: \"error\",\r\n          });\r\n\r\n          clearInterval(this.autosave);\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"sass\" scoped>\r\n.test-marker-grid\r\n    display: grid\r\n    margin-top: 60px\r\n    margin-right: calc(min(100px, 4vw))\r\n    margin-left: calc(min(100px, 4vw))\r\n    grid-template-columns: 2fr 10fr\r\n\r\n\r\n.save-overview:hover\r\n    background-color: rgba(0, 30, 98, 0.25)\r\n\r\n.test-marker-score-overview\r\n    padding: 24px\r\n    background: white\r\n    width: 90%\r\n    margin: 0 12px 0 12px\r\n    position: fixed\r\n    top: 138px\r\n    width: 14vw\r\n\r\n    .score-section\r\n        margin: 12px 0 20px 0\r\n\r\n    span\r\n        font-size: 18px\r\n\r\n\r\n.overview-field-grid\r\n    display: grid\r\n    grid-template-columns: 1fr 1fr\r\n    grid-column-gap: 40px\r\n\r\n@media only screen and (max-width: 900px)\r\n    .test-marker-grid\r\n        grid-template-columns: 1fr\r\n\r\n    .test-marker-score-overview\r\n        margin-bottom: 24px\r\n        position: static\r\n        width: calc(100% - 50px)\r\n\r\n    .test-marker-test-overview\r\n        margin-top: 34px\r\n\r\n    .overview-field-grid\r\n        grid-template-columns: 1fr\r\n\r\n.test-marker-test-overview\r\n    background: white\r\n    width: 90%\r\n    margin: 0 12px 0 12px\r\n    padding: 24px\r\n\r\n.marking-tool\r\n    width: 90%\r\n    margin: 12px 12px 0 12px\r\n\r\n.marking-tool-table\r\n    font-size: 14px\r\n    width: 100%\r\n    margin-bottom: 60px\r\n\r\n    thead\r\n        background-color: #212065\r\n        color: white\r\n\r\n    tr\r\n      background: white\r\n      color: rgba(33, 32, 101, 1)\r\n      font-size: 0.95em\r\n      border-bottom: 1px solid lightgrey\r\n\r\n    td\r\n        padding: 10px\r\n\r\nh4\r\n    font-weight: 400\r\n\r\nh5\r\n    margin-bottom: 2px\r\n    color: rgba(97, 116, 160, 1)\r\n    font-size: 13px\r\n    font-weight: 400\r\n\r\n.default-radio\r\n    font-size: 24px\r\n    color: red\r\n    margin: 0 20px 0 20px\r\n\r\ninput[type=\"radio\"]\r\n    -ms-transform: scale(2)\r\n    -webkit-transform: scale(2)\r\n    transform: scale(2)\r\n\r\n    .correct[type=\"radio\"]:after\r\n        border: 2px solid red\r\n        background-color: #d1d3d1\r\n\r\n.pointer\r\n    cursor: pointer\r\n\r\n.notallowed-pointer\r\n  cursor: not-allowed\r\n\r\n.snackbar\r\n    visibility: hidden\r\n    min-width: 250px\r\n    margin-left: -125px\r\n    background-color: #333\r\n    color: #fff\r\n    text-align: center\r\n    border-radius: 2px\r\n    padding: 16px\r\n    position: fixed\r\n    z-index: 1\r\n    left: 50%\r\n    bottom: 30px\r\n    &.show\r\n      visibility: visible\r\n      -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s\r\n      animation: fadein 0.5s, fadeout 0.5s 2.5s\r\n\r\n.tt-text-area\r\n  background: #FFFFFF\r\n  border: 1px solid #92A0BF\r\n  box-sizing: border-box\r\n  border-radius: 22px\r\n  padding: 4px 20px\r\n  min-height: 40px\r\n  width: 100%\r\n  font-size: 16px\r\n  line-height: 28px\r\n  resize: vertical\r\n  overflow: visible\r\n\r\n.boundary-list\r\n  padding-left: 18px\r\n\r\n.boundary-text\r\n  font-size: 10pt !important\r\n  color: #92A0BF\r\n\r\n\r\n.boundary-text-active\r\n  font-size: 10pt !important\r\n  font-weight: 400\r\n  color: #212065\r\n</style>\r\n"]}]}