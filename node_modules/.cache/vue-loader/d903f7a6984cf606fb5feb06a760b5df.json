{"remainingRequest":"C:\\Users\\lucky\\Desktop\\K-Test-Tracker-Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lucky\\Desktop\\K-Test-Tracker-Frontend\\src\\components\\TestTable.vue?vue&type=style&index=0&id=f4c10748&lang=sass&scoped=true&","dependencies":[{"path":"C:\\Users\\lucky\\Desktop\\K-Test-Tracker-Frontend\\src\\components\\TestTable.vue","mtime":1655289133541},{"path":"C:\\Users\\lucky\\Desktop\\K-Test-Tracker-Frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1655277637321},{"path":"C:\\Users\\lucky\\Desktop\\K-Test-Tracker-Frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1655277614447},{"path":"C:\\Users\\lucky\\Desktop\\K-Test-Tracker-Frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1655277620954},{"path":"C:\\Users\\lucky\\Desktop\\K-Test-Tracker-Frontend\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1655277616921},{"path":"C:\\Users\\lucky\\Desktop\\K-Test-Tracker-Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655277640760},{"path":"C:\\Users\\lucky\\Desktop\\K-Test-Tracker-Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1655277613826}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi50ZXN0LXRhYmxlDQogICAgbWFyZ2luLXJpZ2h0OiBjYWxjKG1pbigxMDBweCwgNHZ3KSkNCiAgICBtYXJnaW4tbGVmdDogY2FsYyhtaW4oMTAwcHgsIDR2dykpDQoNCi50ZXN0LWxpc3QtdGFibGUNCiAgICB3aWR0aDogOTAlDQogICAgbWFyZ2luOiAwIGF1dG8NCiAgICB0ZXh0LWFsaWduOiBjZW50ZXINCiAgICBib3JkZXItY29sbGFwc2U6IHNlcGFyYXRlDQogICAgYm9yZGVyLXNwYWNpbmc6IDAgMTRweA0KDQogICAgLnRlc3QtbGlzdC1oZWFkZXIgdGQNCiAgICAgICAgZm9udC1zaXplOiAwLjllbQ0KICAgICAgICBsaW5lLWhlaWdodDogMTdweA0KICAgICAgICBjb2xvcjogIzYxNzRBMA0KDQogICAgdHINCiAgICAgICAgcGFkZGluZzogMTBweCAxNHB4IDEwcHggMTRweA0KICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZQ0KICAgICAgICBjb2xvcjogcmdiYSgwLCAzMCwgOTgsIDEpDQogICAgICAgIGhlaWdodDogODBweA0KDQoudGVzdC10YWJsZS1oZWFkZXINCiAgICBkaXNwbGF5OiBmbGV4DQogICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQNCiAgICBmb250LXNpemU6IDAuOWVtDQogICAgbGluZS1oZWlnaHQ6IDE3cHgNCiAgICBjb2xvcjogIzYxNzRBMA0KDQouZG90DQogIGhlaWdodDogMTJweA0KICB3aWR0aDogMTJweA0KICBib3JkZXItcmFkaXVzOiA1MCUNCiAgZGlzcGxheTogaW5saW5lLWJsb2NrDQogIG1hcmdpbi1yaWdodDogOHB4DQoNCi50dC1kcm9wLWRvd24NCiAgbWFyZ2luOiAwIDAgNDBweCA1dncNCg0KLnBhZ2VfYnV0dG9uDQogIGN1cnNvcjogcG9pbnRlcg0KDQojc2VhcmNoDQogIGJvcmRlci1yYWRpdXM6IDE1cHgNCiAgcGFkZGluZzogMXB4IDEwcHgNCiAgb3V0bGluZS1vZmZzZXQ6IDANCiNzZWFyY2g6aG92ZXINCiAgb3V0bGluZS1vZmZzZXQ6IDANCi5wYWdlX2NvbnRhaW5lcg0KICBkaXNwbGF5OiBmbGV4DQogIGFsaWduLWl0ZW1zOiBjZW50ZXINCiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHkNCiAgd2lkdGg6IDEyMHB4DQogIGhlaWdodDogZml0LWNvbnRlbnQNCiAgZm9udC1zaXplOiAxNnB4DQogIHBhZGRpbmc6IDhweCAxNHB4DQogIG1heC13aWR0aDogMjAwcHgNCiAgdHJhbnNpdGlvbjogMXMNCiAgbWFyZ2luOiAwDQoNCg0KLnNlbGVjdGVkX3BhZ2VfYnV0dG9uDQogIGJhY2tncm91bmQ6ICMwMDFFNjINCiAgcGFkZGluZzogMnB4IDhweA0KICBib3JkZXItcmFkaXVzOiAxMHB4DQogIGNvbG9yOiB3aGl0ZQ0KICBtYXJnaW46IDAgOHB4DQoNCi5wYWdlX2J1dHRvbg0KICB0cmFuc2l0aW9uOiAwLjE1cyBlYXNlDQogIG1hcmdpbjogMCA4cHgNCiAgY29sb3I6ICMwMDFFNjINCg0KLnBhZ2VfYnV0dG9uOmhvdmVyDQogIGJhY2tncm91bmQ6ICM2MTc0QTANCiAgcGFkZGluZzogMnB4IDhweA0KICBib3JkZXItcmFkaXVzOiAxMHB4DQogIGNvbG9yOiB3aGl0ZQ0KDQouZmxleC1zcGFjZXINCiAgZmxleC1ncm93OiAxDQoNCi50ZXN0LXRvb2xiYXINCiAgYWxpZ24taXRlbXM6IGNlbnRlcg0KICBkaXNwbGF5OiBmbGV4DQogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbg0KICBjb2xvcjogd2hpdGUNCiAgd2lkdGg6IDEwMHZ3DQogIHotaW5kZXg6IDMNCiAgcGFkZGluZzogMjRweCA5dncNCiAgZm9udC1zaXplOiAwLjhyZW0NCg0KLnR0LWRyb3ANCiAgY3Vyc29yOiBwb2ludGVyDQogIGJhY2tncm91bmQ6IHdoaXRlDQogIGJvcmRlci1yYWRpdXM6IDRweA0KICBib3JkZXI6IG5vbmUNCiAgY29sb3I6ICM2MTc0QTANCiAgbWluLXdpZHRoOiAxMDBweA0KDQoudGVzdC1jYXJkLWNvbnRhaW5lcg0KICBkaXNwbGF5OiBub25lDQoNCkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTAwcHgpDQogICAgLnRlc3QtY2FyZC1jb250YWluZXINCiAgICAgIGRpc3BsYXk6IGJsb2NrDQoNCiAgICAudGVzdC1saXN0LXRhYmxlDQogICAgICBkaXNwbGF5OiBub25lDQo="},{"version":3,"sources":["TestTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqTA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA","file":"TestTable.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"test-toolbar\">\r\n      <!-- Old drop down\r\n      <Dropdown\r\n        :selected=\"testTypeToFilter\"\r\n        v-on:input=\"testTypeToFilter = $event\"\r\n        :options=\"uniqueTestTypeNames\"\r\n        :clearable=\"true\"\r\n        class=\"tt-drop-down\"\r\n        title=\"Filter Test Type\"\r\n      />\r\n      -->\r\n      <!-- <div>\r\n        <v-select\r\n          :options=\"testTypeOptions\"\r\n          class=\"tt-drop\"\r\n          placeholder=\"Test Type\"\r\n          v-model=\"testTypeToFilter\"\r\n        />\r\n      </div> -->\r\n      <div class=\"flex-spacer\"></div>\r\n      <input type=\"search\" id=\"search\" placeholder=\"Search by email\" />\r\n      <div class=\"page_container\" style=\"margin-right: 32px\">\r\n        <span style=\"color: #6174a0\">Page</span>\r\n        <div v-for=\"page in PaginationOptions.total_pages\" :key=\"page\">\r\n          <div\r\n            :class=\"\r\n              page == SelectedPage ? 'selected_page_button' : 'page_button'\r\n            \"\r\n            @click=\"setPage(page)\"\r\n          >\r\n            {{ page }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <v-select\r\n          :options=\"[50, 100, 200]\"\r\n          class=\"tt-drop\"\r\n          placeholder=\"Page Size\"\r\n          v-model=\"SelectedPageSize\"\r\n        ></v-select>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"test-table\" style=\"margin-top: 12px\">\r\n      <p class=\"no-tests-message\" v-show=\"Tests.length == 0\">\r\n        It doesn't look like there are any tests here.<br />If you believe there\r\n        should be, please contact afeez@getproofed.com or sing@getproofed.com.\r\n      </p>\r\n\r\n      <!-- desktop -->\r\n      <table class=\"test-list-table\">\r\n        <!-- v-show=\"Tests.length > 0\" -->\r\n        <thead class=\"test-list-header\" >\r\n          <td></td>\r\n          <td>Test ID</td>\r\n          <td>Test Name</td>\r\n          <td>Test Attempt</td>\r\n          <td>{{ testColumnTwo }}</td>\r\n          <td>Learner Name</td>\r\n          <td>Learner Email</td>\r\n          <!-- <td>Learner Name & Email</td> -->\r\n          <td>{{ testColumnFour }}</td>\r\n          <td>{{ testColumnFive }}</td>\r\n          <td></td>\r\n        </thead>\r\n\r\n        <div></div>\r\n\r\n        <tr v-for=\"(Test, index) in Tests\" :key=\"index\">\r\n          <td></td>\r\n          <td>{{ Test.ID }}</td>\r\n          <td>{{ Test.TestType.test_type_name }}</td>\r\n          <td v-if=\"!Marked\">\r\n            {{ Test.typeform_submission_date | formatDate }}\r\n          </td>\r\n          <td v-if=\"Marked\">{{ Test.results_submitted_date | formatDate }}</td>\r\n          <td>{{ Test.proofed_id }}</td>\r\n          <td :style=\"Test.marker_email ? '' : 'color: #6174A0'\">\r\n            {{ Test.marker_email ? Test.marker_email : \"Not yet assigned\" }}\r\n          </td>\r\n          <td>\r\n            <span v-if=\"!Marked\"\r\n              ><span\r\n                class=\"dot\"\r\n                :style=\"\r\n                  !Test.is_assigned\r\n                    ? 'background-color: #E8AA0A'\r\n                    : 'background-color: rgba(0, 179, 115, 1)'\r\n                \"\r\n              ></span\r\n              >{{ Test.is_assigned != 0 ? \"In Progress\" : \"Not Started\" }}</span\r\n            >\r\n            <br v-if=\"!Marked && Test.is_assigned\" /><span\r\n              style=\"font-size: 0.8em; color: #6174a0\"\r\n              v-if=\"!Marked && Test.is_assigned\"\r\n              >Updated {{ Test.UpdatedAt | formatDate }}</span\r\n            >\r\n            <span v-if=\"Marked\"\r\n              >{{ Test.overall_decision }} ({{\r\n                (Test.overall_score * 100).toFixed(1)\r\n              }}%)</span\r\n            >\r\n          </td>\r\n          <td>\r\n            <span v-if=\"!Marked\">\r\n              <a\r\n                @click=\"assignTest(Test.ID, Test.is_assigned)\"\r\n                class=\"primary-button pointer\"\r\n                style=\"padding: 6px 30px 6px 30px; color: white\"\r\n                >Mark</a\r\n              >\r\n            </span>\r\n            <span v-if=\"Marked\">\r\n              <router-link\r\n                class=\"primary-button pointer\"\r\n                style=\"padding: 6px 30px 6px 30px; color: white\"\r\n                :to=\"{ name: 'TestMarker', params: { id: Test.ID } }\"\r\n                >View</router-link\r\n              >\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n\r\n      <!-- mobile -->\r\n      <div class=\"test-card-container\">\r\n        <div v-for=\"Test in Tests\" :key=\"Test.ID\" style=\"margin-bottom: 24px\">\r\n          <TestCard\r\n            :TestID=\"Test.ID\"\r\n            :Marked=\"Marked\"\r\n            :PDate=\"\r\n              Marked\r\n                ? Test.typeform_submission_date\r\n                : Test.results_submitted_date | formatDate\r\n            \"\r\n            :TestType=\"Test.TestType.test_type_name\"\r\n            :Marker=\"Test.marker_email ? Test.marker_email : 'Not yet assigned'\"\r\n            :AssignedTo=\"\r\n              Test.marker_email ? Test.marker_email : 'Not yet assigned'\r\n            \"\r\n            :CandidateID=\"Test.proofed_id\"\r\n            :Status=\"Test.is_assigned != 0 ? 'In Progress ' : 'Not Started'\"\r\n            :Score=\"Test.overall_decision\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <p\r\n        style=\"margin: 0 auto; text-align: center; padding: 24px 0\"\r\n        v-if=\"Tests.length > 0\"\r\n      >\r\n        Showing Tests {{ pageStart }} - {{ pageStart + numTests - 1 }} of\r\n        {{ PaginationOptions.total_results }}\r\n      </p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport moment from \"moment\";\r\nimport Repository from \"../services/Repository\";\r\nimport Dropdown from \"../components/Dropdown.vue\";\r\nimport TestCard from \"../components/TestCard.vue\";\r\n\r\nexport default {\r\n  name: \"TestTable\",\r\n  components: {\r\n    Dropdown,\r\n    TestCard,\r\n  },\r\n  props: [\"Marked\"],\r\n  data() {\r\n    return {\r\n      TestTypes: [],\r\n      testTypeToFilter: null,\r\n      Tests: [],\r\n      PaginationOptions: {},\r\n      SelectedPage: 1,\r\n      SelectedPageSize: 50,\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchTestTypes();\r\n\r\n    this.fetchTests();\r\n  },\r\n  computed: {\r\n    testColumnTwo() {\r\n      return this.Marked ? \"Date Marked\" : \"Date Submitted\";\r\n    },\r\n    testColumnFour() {\r\n      return \"Tutor\";\r\n    },\r\n    testColumnFive() {\r\n      return this.Marked ? \"Score\" : \"Status\";\r\n    },\r\n    uniqueTestTypes() {\r\n      const TestTypeObj = (name, ID) => {\r\n        return {\r\n          name: name,\r\n          ID: ID,\r\n        };\r\n      };\r\n\r\n      let all_test_types = this.Tests.map((t) =>\r\n        TestTypeObj(t.TestType.test_type_name, t.TestType.ID)\r\n      );\r\n\r\n      all_test_types = all_test_types.filter((tt) => tt.ID > 0);\r\n\r\n      return all_test_types;\r\n    },\r\n    testTypeOptions() {\r\n      const TestTypeObj = (label, id) => {\r\n        return {\r\n          label: label,\r\n          id: id,\r\n        };\r\n      };\r\n\r\n      return this.TestTypes.map((tto) =>\r\n        TestTypeObj(tto.test_type_name, tto.ID)\r\n      );\r\n    },\r\n    mappedTestType() {\r\n      return true;\r\n    },\r\n    numTests() {\r\n      return this.Tests.length;\r\n    },\r\n    pageStart() {\r\n      return (this.SelectedPage - 1) * this.SelectedPageSize + 1;\r\n    },\r\n  },\r\n  methods: {\r\n    fetchTestTypes() {\r\n      Repository.get(\"test-types\").then((r) => {\r\n        this.TestTypes = r.data;\r\n      });\r\n    },\r\n    fetchTests() {\r\n      let req = this.testTypeToFilter\r\n        ? `marked-tests?page=${this.SelectedPage}&page_size=${this.SelectedPageSize}&test_type=${this.testTypeToFilter.id}`\r\n        : `marked-tests?page=${this.SelectedPage}&page_size=${this.SelectedPageSize}`;\r\n\r\n      req = this.Marked ? req : \"un\" + req;\r\n\r\n      Repository.get(req).then((r) => {\r\n        this.PaginationOptions = r.data[\"pagination\"];\r\n        this.Tests = r.data[\"data\"];\r\n      });\r\n    },\r\n    setPage(page) {\r\n      this.SelectedPage = parseInt(page);\r\n    },\r\n    assignTest(testID, isAssigned) {\r\n      //let authSub = this.$auth.user.id;\r\n      //let markerId = MarkerMapService.getMarkerIDByAuthSub(authSub);\r\n\r\n      if (isAssigned) {\r\n        this.$router.push({\r\n          name: \"TestMarker\",\r\n          params: { id: testID },\r\n        });\r\n        return;\r\n      }\r\n\r\n      let marker_email = this.$auth.user.email;\r\n      Repository.post(`assign?test-id=${testID}&marker-email=${marker_email}`)\r\n        .then((r) => {\r\n          r;\r\n          this.$router.push({\r\n            name: \"TestMarker\",\r\n            params: { id: testID },\r\n          });\r\n        })\r\n        .catch((e) => {\r\n          e;\r\n        });\r\n    },\r\n    onlyUnique(value, index, self) {\r\n      return self.indexOf(value) === index;\r\n    },\r\n  },\r\n  filters: {\r\n    formatDate: function (val) {\r\n      return moment(val).fromNow();\r\n    },\r\n  },\r\n  watch: {\r\n    testTypeToFilter() {\r\n      this.SelectedPage = 1;\r\n      this.fetchTests();\r\n    },\r\n    SelectedPage() {\r\n      this.fetchTests();\r\n    },\r\n    SelectedPageSize() {\r\n      this.SelectedPage = 1;\r\n      this.fetchTests();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"sass\" scoped>\r\n.test-table\r\n    margin-right: calc(min(100px, 4vw))\r\n    margin-left: calc(min(100px, 4vw))\r\n\r\n.test-list-table\r\n    width: 90%\r\n    margin: 0 auto\r\n    text-align: center\r\n    border-collapse: separate\r\n    border-spacing: 0 14px\r\n\r\n    .test-list-header td\r\n        font-size: 0.9em\r\n        line-height: 17px\r\n        color: #6174A0\r\n\r\n    tr\r\n        padding: 10px 14px 10px 14px\r\n        background: white\r\n        color: rgba(0, 30, 98, 1)\r\n        height: 80px\r\n\r\n.test-table-header\r\n    display: flex\r\n    justify-content: space-around\r\n    font-size: 0.9em\r\n    line-height: 17px\r\n    color: #6174A0\r\n\r\n.dot\r\n  height: 12px\r\n  width: 12px\r\n  border-radius: 50%\r\n  display: inline-block\r\n  margin-right: 8px\r\n\r\n.tt-drop-down\r\n  margin: 0 0 40px 5vw\r\n\r\n.page_button\r\n  cursor: pointer\r\n\r\n#search\r\n  border-radius: 15px\r\n  padding: 1px 10px\r\n  outline-offset: 0\r\n#search:hover\r\n  outline-offset: 0\r\n.page_container\r\n  display: flex\r\n  align-items: center\r\n  justify-content: space-evenly\r\n  width: 120px\r\n  height: fit-content\r\n  font-size: 16px\r\n  padding: 8px 14px\r\n  max-width: 200px\r\n  transition: 1s\r\n  margin: 0\r\n\r\n\r\n.selected_page_button\r\n  background: #001E62\r\n  padding: 2px 8px\r\n  border-radius: 10px\r\n  color: white\r\n  margin: 0 8px\r\n\r\n.page_button\r\n  transition: 0.15s ease\r\n  margin: 0 8px\r\n  color: #001E62\r\n\r\n.page_button:hover\r\n  background: #6174A0\r\n  padding: 2px 8px\r\n  border-radius: 10px\r\n  color: white\r\n\r\n.flex-spacer\r\n  flex-grow: 1\r\n\r\n.test-toolbar\r\n  align-items: center\r\n  display: flex\r\n  justify-content: space-between\r\n  color: white\r\n  width: 100vw\r\n  z-index: 3\r\n  padding: 24px 9vw\r\n  font-size: 0.8rem\r\n\r\n.tt-drop\r\n  cursor: pointer\r\n  background: white\r\n  border-radius: 4px\r\n  border: none\r\n  color: #6174A0\r\n  min-width: 100px\r\n\r\n.test-card-container\r\n  display: none\r\n\r\n@media only screen and (max-width: 900px)\r\n    .test-card-container\r\n      display: block\r\n\r\n    .test-list-table\r\n      display: none\r\n</style>\r\n"]}]}