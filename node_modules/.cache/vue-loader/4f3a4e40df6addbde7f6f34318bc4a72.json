{"remainingRequest":"/Users/afeeza/Documents/GitHub/K-Test-Tracker-Frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/afeeza/Documents/GitHub/K-Test-Tracker-Frontend/src/views/SchemaEditor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/afeeza/Documents/GitHub/K-Test-Tracker-Frontend/src/views/SchemaEditor.vue","mtime":1654092290000},{"path":"/Users/afeeza/Documents/GitHub/K-Test-Tracker-Frontend/node_modules/cache-loader/dist/cjs.js","mtime":1654415110733},{"path":"/Users/afeeza/Documents/GitHub/K-Test-Tracker-Frontend/node_modules/babel-loader/lib/index.js","mtime":1654415111259},{"path":"/Users/afeeza/Documents/GitHub/K-Test-Tracker-Frontend/node_modules/cache-loader/dist/cjs.js","mtime":1654415110733},{"path":"/Users/afeeza/Documents/GitHub/K-Test-Tracker-Frontend/node_modules/vue-loader/lib/index.js","mtime":1654415111466}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["SchemaEditor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"SchemaEditor.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div :style=\"cssVars\">\n    <!--\n    <TTModal\n      v-show=\"showDeleteModal\"\n      @onConfirm=\"deleteTestQuestion()\"\n      header=\"Are you Sure?\"\n      message=\"Yes mate\"\n    />\n    -->\n    <Dropdown\n  \n      :selected=\"testTypeToFilter\"\n      v-on:input=\"testTypeToFilter = $event\"\n      :options=\"uniqueTestTypes\"\n      class=\"tt-drop-down\"\n      title=\"Select Test Type\"\n    />\n    <div class=\"schema-container\">\n      <div\n        class=\"test-type-overview schema-container-item\"\n        style=\"max-height: 500px\"\n      >\n        <p class=\"card-header-text\">{{ Schema.test_type_name }}</p>\n        <p style=\"font-size: 0.9em; margin-top: 0\">\n          {{ Schema.test_type_description }}\n        </p>\n        <DataRow :fieldName=\"'Total Marks'\" :fieldData=\"Schema.total_marks\" />\n        <DataRow\n          :fieldName=\"'Payment Amount'\"\n          :fieldData=\"`$${(Schema.payment_amount_cents / 100).toFixed(2)}`\"\n        />\n        <DataRow\n          :fieldName=\"'Show Granular Feedback'\"\n          :fieldData=\"Schema.show_granular ? 'Yes' : 'No'\"\n        />\n        <DataRow\n          :fieldName=\"'High Pass Rate'\"\n          :fieldData=\"`${Schema.high_pass_rate * 100}%`\"\n        />\n        <DataRow\n          :fieldName=\"'Pass Rate'\"\n          :fieldData=\"`${Schema.pass_rate * 100}%`\"\n        />\n        <DataRow\n          :fieldName=\"'Fail Rate'\"\n          :fieldData=\"`${Schema.fail_rate * 100}%`\"\n        />\n      </div>\n\n      <div class=\"test-question-list schema-container-item\">\n        <p class=\"subline\" v-show=\"editQuestionState.showForm\">Editing</p>\n        <p>\n          <span\n            class=\"card-header-text pointer\"\n            :style=\"\n              !editQuestionState.showForm\n                ? 'display: flex; justify-content: space-between'\n                : ''\n            \"\n            @click=\"editQuestionState.showForm = false\"\n          >\n            <span>{{ editorHeader }}</span\n            ><span\n              v-show=\"showQuestionView\"\n              @click=\"createQuestionState.showForm = true\"\n              class=\"subline\"\n              style=\"font-family: sans-serif\"\n            >\n              + New Question\n            </span>\n          </span>\n          <span class=\"card-header-text\" v-show=\"editQuestionState.showForm\">\n            / ID {{ editQuestionState.questionID }}\n          </span>\n        </p>\n\n        <!-- question creator -->\n        <div v-if=\"createQuestionState.showForm\" class=\"create-question-form\">\n          <span class=\"form-label\">Question Identifier</span>\n          <input\n            type=\"text\"\n            class=\"thin-text-area\"\n            placeholder=\"Q ID\"\n            v-model=\"createQuestionState.newQuestionForm.question_identifier\"\n          />\n\n          <span class=\"form-label\">Marks</span>\n          <input\n            type=\"number\"\n            class=\"thin-text-area\"\n            placeholder=\"marks\"\n            v-model=\"createQuestionState.newQuestionForm.marks\"\n          />\n\n          <span class=\"form-label\">Marker Remarks</span>\n          <textarea\n            class=\"thicc-text-area\"\n            placeholder=\"Marker Remarks\"\n            v-model=\"createQuestionState.newQuestionForm.marker_remarks\"\n          />\n\n          <span class=\"form-label\">Editor Feedback</span>\n          <textarea\n            class=\"thicc-text-area\"\n            placeholder=\"Editor Feedback\"\n            v-model=\"createQuestionState.newQuestionForm.editor_comments\"\n          />\n          <div\n            class=\"secondary-button pointer\"\n            style=\"height: 36px; line-height: 36px\"\n            @click=\"createTestQuestion\"\n          >\n            Create Test Question for {{ testTypeToFilter }}\n          </div>\n          <div\n            @click=\"createQuestionState.showForm = false\"\n            class=\"tertiary-button pointer\"\n            style=\"height: 36px; line-height: 36px; margin-top: 12px\"\n          >\n            Return to Questions\n          </div>\n        </div>\n\n        <!-- question editor -->\n\n        <div v-if=\"editQuestionState.showForm\">\n          <span class=\"form-label\">Question Identifier</span>\n          <input\n            type=\"text\"\n            class=\"thin-text-area\"\n            placeholder=\"Q ID\"\n            v-model=\"\n              Schema.TestQuestions.filter(\n                (q) => q['SchemaID'] == editQuestionState.questionID\n              )[0]['question_id']\n            \"\n          />\n\n          <span class=\"form-label\">Marks</span>\n          <input\n            type=\"number\"\n            class=\"thin-text-area\"\n            placeholder=\"marks\"\n            v-model=\"\n              Schema.TestQuestions.filter(\n                (q) => q['SchemaID'] == editQuestionState.questionID\n              )[0]['marks']\n            \"\n          />\n\n          <span class=\"form-label\">Marker Remarks</span>\n          <textarea\n            class=\"thicc-text-area\"\n            placeholder=\"Marker Remarks\"\n            v-model=\"\n              Schema.TestQuestions.filter(\n                (q) => q['SchemaID'] == editQuestionState.questionID\n              )[0]['marker_remarks']\n            \"\n          />\n\n          <span class=\"form-label\">Editor Feedback</span>\n          <textarea\n            class=\"thicc-text-area\"\n            placeholder=\"Editor Feedback\"\n            v-model=\"\n              Schema.TestQuestions.filter(\n                (q) => q['SchemaID'] == editQuestionState.questionID\n              )[0]['editor_comments']\n            \"\n          />\n          <div\n            class=\"secondary-button pointer\"\n            style=\"height: 36px; line-height: 36px\"\n            @click=\"updateTestQuestion\"\n          >\n            Update Test Question\n          </div>\n          <div\n            @click=\"editQuestionState.showForm = false\"\n            class=\"tertiary-button pointer\"\n            style=\"height: 36px; line-height: 36px; margin-top: 12px\"\n          >\n            Return to Questions\n          </div>\n        </div>\n\n        <div v-show=\"showQuestionView\">\n          <input\n            v-model=\"questionSearch\"\n            class=\"thin-text-area\"\n            placeholder=\"Search\"\n          />\n\n          <div v-if=\"testTypeToFilter !== 'EEDSTR01'\" v-for=\"(question, index) in filteredQuestions\" :key=\"index\">\n            <TestQuestion\n              :testQuestion=\"question\"\n              @updateQ=\"triggerTQForm\"\n              @deleteQ=\"deleteQuestion\"\n            />\n          </div>\n\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Repository from \"../services/Repository\";\nimport TestQuestion from \"../components/TestQuestion.vue\";\nimport DataRow from \"../components/DataRow.vue\";\nimport TTModal from \"../components/TTModal.vue\";\nimport TestTable from \"../components/TestTable.vue\";\nimport Dropdown from \"../components/Dropdown.vue\";\n// import e from \"express\";\n\nexport default {\n  name: \"SchemaEditor\",\n  components: { TestQuestion, DataRow, TTModal, TestTable, Dropdown },\n  data() {\n    return {\n      Schema: {},\n      questionSearch: \"\",\n      showDeleteModal: false,\n      editQuestionState: {\n        showForm: false,\n        questionID: 130,\n      },\n      AllTestTypes: [],\n      testTypeToFilter: \"EEDSTR01\",\n      createQuestionState: {\n        showForm: false,\n        newQuestionForm: {\n          question_identifier: \"\",\n          marker_remarks: \"\",\n          editor_comments: \"\",\n          marks: 1,\n          issue_type: \"\",\n          test_type: -1,\n        },\n      },\n    };\n  },\n\n  created() {\n    Repository.get(`test-type/${this.testTypeToFilter}`).then((r) => {\n      this.Schema = r.data;\n    });\n\n    Repository.get(\"test-types\").then((r) => {\n      this.AllTestTypes = r.data;\n    });\n  },\n  methods: {\n    \n    triggerTQForm(SchemaID) {\n      this.editQuestionState.showForm = true;\n      this.editQuestionState.questionID = SchemaID;\n    },\n    deleteQuestion(SchemaID) {\n      Repository.delete(`test-question/${SchemaID}`)\n        .then((r) => {\n          r;\n          this.Schema.TestQuestions = this.Schema.TestQuestions.filter(\n            (q) => q[\"SchemaID\"] != SchemaID\n          );\n\n          this.$notify({\n            title: \"Successfully Deleted\",\n            text: \"\",\n            type: \"info\",\n          });\n        })\n        .catch((e) => {\n          this.$notify({\n            title: \"Error Deleting\",\n            text: e,\n            type: \"error\",\n          });\n        });\n    },\n\n    createTestQuestion() {\n      let newQData = this.createQuestionState.newQuestionForm;\n      let payload = {\n        question_identifier: newQData.question_identifier,\n        marker_remarks: newQData.marker_remarks,\n        editor_comments: newQData.editor_comments,\n        marks: parseInt(newQData.marks),\n        issue_type: \"\",\n        test_type: this.Schema.ID,\n      };\n      Repository.post(\"test-question\", payload)\n        .then((r) => {\n          this.$notify({\n            title: \"Successfully Created\",\n            text: r.data,\n            type: \"info\",\n          });\n\n          this.resetCreateState();\n\n          //reload schema\n          Repository.get(`test-type/${this.testTypeToFilter}`).then((r) => {\n            this.Schema = r.data;\n          });\n        })\n        .catch((e) => {\n          this.$notify({\n            title: \"Test Creation Was Unsuccessful\",\n            text: e,\n            type: \"warn\",\n          });\n        });\n    },\n\n    updateTestQuestion() {\n      if (!this.editQuestionState.showForm) return;\n\n      let testQuestion = this.Schema.TestQuestions.filter(\n        (q) => q[\"SchemaID\"] == this.editQuestionState.questionID\n      )[0];\n\n      let payload = {\n        question_identifier: testQuestion[\"question_id\"],\n        marker_remarks: testQuestion.marker_remarks,\n        editor_comments: testQuestion.editor_comments,\n        info_url: \"\",\n        marks: parseInt(testQuestion.marks),\n        issue_type: \"\",\n        test_type: testQuestion.TestType.id,\n      };\n\n      Repository.put(\n        `test-question/${this.editQuestionState.questionID}`,\n        payload\n      )\n        .then((r) => {\n          r;\n          this.editQuestionState.showForm = false;\n          this.editQuestionState.questionID = 0;\n\n          this.$notify({\n            title: \"Successfully Updated\",\n            text: \"\",\n            type: \"info\",\n          });\n        })\n        .catch((e) => {\n          this.$notify({\n            title: \"Error Updating\",\n            text: e,\n            type: \"error\",\n          });\n        });\n    },\n    resetCreateState() {\n      this.createQuestionState = {\n        showForm: false,\n        newQuestionForm: {\n          question_identifier: \"\",\n          marker_remarks: \"\",\n          editor_comments: \"\",\n          marks: 1,\n          issue_type: \"\",\n          test_type: -1,\n        },\n      };\n    },\n  },\n  computed: {\n    cssVars() {\n      let status = undefined;\n      if (this.createQuestionState.showForm) {\n        status = \"Creating New Question\";\n      } else if (this.editQuestionState.showForm) {\n        status = \"Editing Question\";\n      }\n      return {\n        \"--text\": JSON.stringify(status),\n      };\n    },\n    filteredQuestions() {\n      let query = this.questionSearch.toLowerCase();\n\n      if (query.length > 0) {\n        return this.Schema.TestQuestions.filter(\n          (q) =>\n            q[\"marker_remarks\"].toLowerCase().indexOf(query) > -1 ||\n            q[\"editor_comments\"].toLowerCase().indexOf(query) > -1\n        );\n      } else {\n        return this.Schema.TestQuestions;\n      }\n    },\n    uniqueTestTypes() {\n      // return this.AllTestTypes.map((r) => r[\"test_type_name\"]);\n      return [\n        \"acadfad\",\n        \"adsfadfa\",\n        \"adsfasdfa\",\n        \"acadfad\",\n        \"adsfadfa\",\n        \"adsfasdfa\",\n        \"acadfad\",\n        \"adsfadfa\",\n        \"adsfasdfa\",\n        \"acadfad\",\n        \"adsfadfa\",\n        \"adsfasdfa\",\n        \"acadfad\",\n        \"adsfadfa\",\n        \"adsfasdfa\",\n      ]\n    },\n    showQuestionView() {\n      return (\n        !this.createQuestionState.showForm && !this.editQuestionState.showForm\n      );\n    },\n    editorHeader() {\n      if (this.createQuestionState.showForm) {\n        return `Creating New Question for ${this.testTypeToFilter}`;\n      } else if (this.editQuestionState.showForm) {\n        return `Editing Question`;\n      } else {\n        return `${this.testTypeToFilter} Questions`;\n      }\n    },\n  },\n  watch: {\n    testTypeToFilter: function () {\n      Repository.get(`test-type/${this.testTypeToFilter}`).then((r) => {\n        this.Schema = r.data;\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"sass\" scoped>\n.schema-editor-container\n    background: white\n    height: 640px\n    width: 640px\n    padding: 64px\n    margin: 64px auto\n\n\n.schema-container\n  display: grid\n  grid-template-columns: 1fr 2fr\n  grid-column-gap: 24px\n  margin: 94px 120px 64px 120px\n\n.tt-drop-down\n  position: absolute\n  margin-left: 120px\n  margin-top: 30px\n  overflow-y: scroll\n  max-height: 400px\n\n.schema-container-item\n  background: white\n  padding: 32px\n\n.form-label\n  font-size: 12px\n  line-height: 16px\n  color: #001E62\n\n\n.thin-text-area\n  width: 100%\n  background: #FFFFFF\n  border: 1px solid rgba(0, 0, 0, 0.1)\n  box-sizing: border-box\n  border-radius: 22px\n  padding: 8px\n  color: #001E62\n  padding-left: 22px\n  margin: 0 0 12px 0\n\n.thicc-text-area\n  width: 100%\n  background: #FFFFFF\n  border: 1px solid rgba(0, 0, 0, 0.1)\n  box-sizing: border-box\n  border-radius: 22px\n  padding: 8px\n  color: #001E62\n  padding-left: 22px\n  min-height: 64px\n  margin: 0 0 12px 0\n\n.thin-text-area:focus\n  box-shadow: none\n  border: 2px solid #00B373\n\n.test-type-select-container\n  display: flex\n  justify-content: space-around\n  margin: 40px 80px 0\n  max-width: 100%\n\n.create-question-form\n  background: white\n\n.test-question-list\n  position: relative\n\n.test-question-list::before\n  position: absolute\n  content: var(--text)\n  text-align: center\n  background: rgba(0, 30, 98, 1)\n  color: white\n  width: 100%\n  height: auto\n  padding: 2px\n  font-size: 10pt\n  left: -0px\n  top: -24px\n\n@media only screen and (max-width: 900px)\n  .schema-container\n    grid-template-columns: 1fr\n    margin: 16px\n\n  .schema-container-item\n    margin: 16px\n</style>\n"]}]}