{"remainingRequest":"/Users/afeeza/Documents/GitHub/K-Test-Tracker-Frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/afeeza/Documents/GitHub/K-Test-Tracker-Frontend/src/views/TestMarker.vue?vue&type=template&id=5a662b26&scoped=true&","dependencies":[{"path":"/Users/afeeza/Documents/GitHub/K-Test-Tracker-Frontend/src/views/TestMarker.vue","mtime":1654093330000},{"path":"/Users/afeeza/Documents/GitHub/K-Test-Tracker-Frontend/node_modules/cache-loader/dist/cjs.js","mtime":1654415110733},{"path":"/Users/afeeza/Documents/GitHub/K-Test-Tracker-Frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1654415111852},{"path":"/Users/afeeza/Documents/GitHub/K-Test-Tracker-Frontend/node_modules/cache-loader/dist/cjs.js","mtime":1654415110733},{"path":"/Users/afeeza/Documents/GitHub/K-Test-Tracker-Frontend/node_modules/vue-loader/lib/index.js","mtime":1654415111466}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}