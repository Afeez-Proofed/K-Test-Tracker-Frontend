{"remainingRequest":"C:\\Users\\lucky\\Desktop\\K-Test-Tracker-Frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\lucky\\Desktop\\K-Test-Tracker-Frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\lucky\\Desktop\\K-Test-Tracker-Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lucky\\Desktop\\K-Test-Tracker-Frontend\\src\\components\\TestCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\lucky\\Desktop\\K-Test-Tracker-Frontend\\src\\components\\TestCard.vue","mtime":1655277426987},{"path":"C:\\Users\\lucky\\Desktop\\K-Test-Tracker-Frontend\\babel.config.js","mtime":1655277411022},{"path":"C:\\Users\\lucky\\Desktop\\K-Test-Tracker-Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655277640760},{"path":"C:\\Users\\lucky\\Desktop\\K-Test-Tracker-Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1655277642997},{"path":"C:\\Users\\lucky\\Desktop\\K-Test-Tracker-Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655277640760},{"path":"C:\\Users\\lucky\\Desktop\\K-Test-Tracker-Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1655277613826}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IERhdGFSb3cgZnJvbSAiLi4vY29tcG9uZW50cy9EYXRhUm93LnZ1ZSI7CmltcG9ydCBtb21lbnQgZnJvbSAibW9tZW50IjsKaW1wb3J0IFJlcG9zaXRvcnkgZnJvbSAiLi4vc2VydmljZXMvUmVwb3NpdG9yeSI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiVGVzdENhcmQiLAogIGNvbXBvbmVudHM6IHsKICAgIERhdGFSb3c6IERhdGFSb3cKICB9LAogIHByb3BzOiBbIk1hcmtlZCIsICJUZXN0SUQiLCAiVGVzdFR5cGUiLCAiUERhdGUiLCAiQ2FuZGlkYXRlSUQiLCAiQXNzaWduZWRUbyIsICJTdGF0dXMiLCAiU2NvcmUiXSwKICBtZXRob2RzOiB7CiAgICBmb3JtYXREYXRlOiBmdW5jdGlvbiBmb3JtYXREYXRlKHZhbCkgewogICAgICByZXR1cm4gbW9tZW50KHZhbCkuZnJvbU5vdygpOwogICAgfSwKICAgIGFzc2lnblRlc3Q6IGZ1bmN0aW9uIGFzc2lnblRlc3QodGVzdElELCBpc0Fzc2lnbmVkKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICAvL2xldCBhdXRoU3ViID0gdGhpcy4kYXV0aC51c2VyLmlkOwogICAgICAvL2xldCBtYXJrZXJJZCA9IE1hcmtlck1hcFNlcnZpY2UuZ2V0TWFya2VySURCeUF1dGhTdWIoYXV0aFN1Yik7CiAgICAgIGlmIChpc0Fzc2lnbmVkKSB7CiAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgICAgbmFtZTogIlRlc3RNYXJrZXIiLAogICAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICAgIGlkOiB0ZXN0SUQKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHZhciBtYXJrZXJfZW1haWwgPSB0aGlzLiRhdXRoLnVzZXIuZW1haWw7CiAgICAgIFJlcG9zaXRvcnkucG9zdCgiYXNzaWduP3Rlc3QtaWQ9Ii5jb25jYXQodGVzdElELCAiJm1hcmtlci1lbWFpbD0iKS5jb25jYXQobWFya2VyX2VtYWlsKSkudGhlbihmdW5jdGlvbiAocikgewogICAgICAgIHI7CgogICAgICAgIF90aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgICBuYW1lOiAiVGVzdE1hcmtlciIsCiAgICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgICAgaWQ6IHRlc3RJRAogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZSkgewogICAgICAgIGU7CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["TestCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA,OAAA,OAAA;AACA,OAAA,MAAA,MAAA,QAAA;AACA,OAAA,UAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,OAAA,EAAA;AADA,GAFA;AAKA,EAAA,KAAA,EAAA,CACA,QADA,EAEA,QAFA,EAGA,UAHA,EAIA,OAJA,EAKA,aALA,EAMA,YANA,EAOA,QAPA,EAQA,OARA,CALA;AAeA,EAAA,OAAA,EAAA;AACA,IAAA,UAAA,EAAA,oBAAA,GAAA,EAAA;AACA,aAAA,MAAA,CAAA,GAAA,CAAA,CAAA,OAAA,EAAA;AACA,KAHA;AAIA,IAAA,UAJA,sBAIA,MAJA,EAIA,UAJA,EAIA;AAAA;;AACA;AACA;AAEA,UAAA,UAAA,EAAA;AACA,aAAA,OAAA,CAAA,IAAA,CAAA;AACA,UAAA,IAAA,EAAA,YADA;AAEA,UAAA,MAAA,EAAA;AAAA,YAAA,EAAA,EAAA;AAAA;AAFA,SAAA;AAIA;AACA;;AAEA,UAAA,YAAA,GAAA,KAAA,KAAA,CAAA,IAAA,CAAA,KAAA;AACA,MAAA,UAAA,CAAA,IAAA,0BAAA,MAAA,2BAAA,YAAA,GACA,IADA,CACA,UAAA,CAAA,EAAA;AACA,QAAA,CAAA;;AACA,QAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,UAAA,IAAA,EAAA,YADA;AAEA,UAAA,MAAA,EAAA;AAAA,YAAA,EAAA,EAAA;AAAA;AAFA,SAAA;AAIA,OAPA,EAQA,KARA,CAQA,UAAA,CAAA,EAAA;AACA,QAAA,CAAA;AACA,OAVA;AAWA;AA5BA;AAfA,CAAA","sourcesContent":["<template>\r\n  <div class=\"test-card\">\r\n    <div style=\"display: flex; align-items: center\">\r\n      <div style=\"margin-right: 18px\">\r\n        <img :src=\"require(`@/assets/marked-test.svg`)\" />\r\n      </div>\r\n      <div>\r\n        <p class=\"subheading\">Test ID</p>\r\n        <p>{{ TestID }}</p>\r\n      </div>\r\n      <div style=\"flex-grow: 1\"></div>\r\n      <span v-if=\"!Marked\">\r\n        <a\r\n          @click=\"assignTest(TestID, AssignedTo !== 'Not yet assigned')\"\r\n          class=\"primary-button pointer\"\r\n          style=\"padding: 6px 30px 6px 30px; color: white\"\r\n          >Mark</a\r\n        >\r\n      </span>\r\n      <span v-if=\"Marked\">\r\n        <router-link\r\n          class=\"primary-button pointer\"\r\n          style=\"padding: 6px 30px 6px 30px; color: white\"\r\n          :to=\"{ name: 'TestMarker', params: { id: TestID } }\"\r\n          >View</router-link\r\n        >\r\n      </span>\r\n    </div>\r\n\r\n    <DataRow :fieldName=\"'Test Type'\" :fieldData=\"TestType\" />\r\n\r\n    <DataRow\r\n      :fieldName=\"Marked ? 'Date Marked' : 'Date Submitted'\"\r\n      :fieldData=\"PDate\"\r\n    />\r\n\r\n    <DataRow :fieldName=\"'Candidate ID'\" :fieldData=\"CandidateID\" />\r\n\r\n    <DataRow :fieldName=\"'Assigned To'\" :fieldData=\"AssignedTo\" />\r\n\r\n    <DataRow\r\n      :fieldName=\"Marked ? 'Score' : 'Status'\"\r\n      :fieldData=\"Marked ? Score : Status\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport DataRow from \"../components/DataRow.vue\";\r\nimport moment from \"moment\";\r\nimport Repository from \"../services/Repository\";\r\n\r\nexport default {\r\n  name: \"TestCard\",\r\n  components: {\r\n    DataRow,\r\n  },\r\n  props: [\r\n    \"Marked\",\r\n    \"TestID\",\r\n    \"TestType\",\r\n    \"PDate\",\r\n    \"CandidateID\",\r\n    \"AssignedTo\",\r\n    \"Status\",\r\n    \"Score\",\r\n  ],\r\n  methods: {\r\n    formatDate: function (val) {\r\n      return moment(val).fromNow();\r\n    },\r\n    assignTest(testID, isAssigned) {\r\n      //let authSub = this.$auth.user.id;\r\n      //let markerId = MarkerMapService.getMarkerIDByAuthSub(authSub);\r\n\r\n      if (isAssigned) {\r\n        this.$router.push({\r\n          name: \"TestMarker\",\r\n          params: { id: testID },\r\n        });\r\n        return;\r\n      }\r\n\r\n      let marker_email = this.$auth.user.email;\r\n      Repository.post(`assign?test-id=${testID}&marker-email=${marker_email}`)\r\n        .then((r) => {\r\n          r;\r\n          this.$router.push({\r\n            name: \"TestMarker\",\r\n            params: { id: testID },\r\n          });\r\n        })\r\n        .catch((e) => {\r\n          e;\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"sass\" scoped>\r\n.test-card\r\n    background: white\r\n    padding: 32px\r\n\r\n.subheading\r\n    color: #6174A0\r\n    font-size: 14px\r\n    margin-bottom: 0px\r\n\r\n.field-data\r\n    padding-top: 0px\r\n    font-size: 18px\r\n</style>\r\n"],"sourceRoot":"src/components"}]}