{"remainingRequest":"/Users/afeeza/Documents/GitHub/K-Test-Tracker-Frontend/node_modules/babel-loader/lib/index.js!/Users/afeeza/Documents/GitHub/K-Test-Tracker-Frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/afeeza/Documents/GitHub/K-Test-Tracker-Frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/afeeza/Documents/GitHub/K-Test-Tracker-Frontend/src/views/TestMarker.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/afeeza/Documents/GitHub/K-Test-Tracker-Frontend/src/views/TestMarker.vue","mtime":1654093330000},{"path":"/Users/afeeza/Documents/GitHub/K-Test-Tracker-Frontend/babel.config.js","mtime":1653965448000},{"path":"/Users/afeeza/Documents/GitHub/K-Test-Tracker-Frontend/node_modules/cache-loader/dist/cjs.js","mtime":1654415110733},{"path":"/Users/afeeza/Documents/GitHub/K-Test-Tracker-Frontend/node_modules/babel-loader/lib/index.js","mtime":1654415111259},{"path":"/Users/afeeza/Documents/GitHub/K-Test-Tracker-Frontend/node_modules/cache-loader/dist/cjs.js","mtime":1654415110733},{"path":"/Users/afeeza/Documents/GitHub/K-Test-Tracker-Frontend/node_modules/vue-loader/lib/index.js","mtime":1654415111466}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["TestMarker.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwMA,OAAA,OAAA;AACA,OAAA,QAAA;AACA,OAAA,SAAA;AACA,OAAA,UAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,uBAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA,EAFA;AAGA,MAAA,UAAA,EAAA;AAHA,KAAA;AAKA,GAPA;AAQA,EAAA,UAAA,EAAA;AACA,IAAA,OAAA,EAAA,OADA;AAEA,IAAA,QAAA,EAAA,QAFA;AAGA,IAAA,SAAA,EAAA;AAHA,GARA;AAaA,EAAA,IAAA,EAAA,YAbA;AAcA,EAAA,OAdA,qBAcA;AAAA;;AACA;AACA,QAAA,OAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA;AAEA,IAAA,UAAA,CAAA,GAAA,gBAAA,OAAA,GACA,IADA,CACA,UAAA,CAAA,EAAA;AACA,MAAA,KAAA,CAAA,QAAA,GAAA,CAAA,CAAA,IAAA;AACA,MAAA,KAAA,CAAA,UAAA,GAAA,IAAA;AAEA,UAAA,CAAA,KAAA,CAAA,QAAA,CAAA,uBAAA,EACA,KAAA,CAAA,QAAA,GAAA,WAAA,CAAA;AAAA,eAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA;AAAA,OAAA,EAAA,KAAA,CAAA;AACA,KAPA,EAQA,KARA,CAQA,UAAA,CAAA;AAAA,aAAA,CAAA;AAAA,KARA;AASA,GA3BA;AA4BA,EAAA,OA5BA,qBA4BA;AACA;AACA,QAAA,4BAAA,GACA,KAAA,QAAA,CAAA,YAAA,IAAA,KAAA,KAAA,CAAA,IAAA,CAAA,KADA;AAEA,QAAA,CAAA,4BAAA,EAAA,aAAA,CAAA,KAAA,QAAA,CAAA;AACA,GAjCA;AAkCA,EAAA,QAAA,EAAA;AACA,IAAA,kBADA,gCACA;AACA,aAAA,KAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,cAAA,IAAA,EAAA;AAAA,OAAA,CAAA;AACA,KAHA;AAIA,IAAA,QAJA,sBAIA;AACA,UAAA,CAAA,KAAA,UAAA,EAAA;AACA,eAAA,YAAA;AACA;;AAEA,UAAA,KAAA,cAAA,GAAA,GAAA,IAAA,KAAA,QAAA,CAAA,QAAA,CAAA,cAAA,EAAA;AACA,eAAA,aAAA;AACA,OAFA,MAEA,IACA,KAAA,cAAA,GAAA,GAAA,IACA,KAAA,QAAA,CAAA,QAAA,CAAA,SAFA,EAGA;AACA,eAAA,MAAA;AACA,OALA,MAKA,IACA,KAAA,cAAA,GAAA,GAAA,IACA,KAAA,QAAA,CAAA,QAAA,CAAA,SAFA,EAGA;AACA,eAAA,MAAA;AACA,OALA,MAKA;AACA,eAAA,MAAA;AACA;AACA,KAxBA;AAyBA,IAAA,OAzBA,qBAyBA;AACA,aACA,KAAA,UAAA,IACA,KAAA,QAAA,CAAA,MAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,MAAA;AAAA,OAAA,EACA,GADA,CACA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,KAAA;AAAA,OADA,EAEA,MAFA,CAEA,UAAA,CAAA,EAAA,CAAA;AAAA,eAAA,CAAA,GAAA,CAAA;AAAA,OAFA,EAEA,CAFA,CAFA;AAMA,KAhCA;AAiCA,IAAA,cAjCA,4BAiCA;AACA,aACA,KAAA,UAAA,IACA,CAAA,KAAA,OAAA,GAAA,KAAA,oBAAA,GAAA,GAAA,EAAA,OAAA,CAAA,CAAA,CAFA;AAIA,KAtCA;AAuCA,IAAA,WAvCA,yBAuCA;AACA,aACA,KAAA,UAAA,IACA,KAAA,QAAA,CAAA,MAAA,CAAA,MAAA,CACA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,MAAA,KAAA,SAAA,IAAA,CAAA,CAAA,MAAA,KAAA,IAAA;AAAA,OADA,EAEA,MAJA;AAMA,KA9CA;AA+CA,IAAA,oBA/CA,kCA+CA;AACA,UAAA,CAAA,KAAA,UAAA,EAAA;AACA,eAAA,CAAA;AACA;;AAEA,UAAA,GAAA,GAAA,CAAA;AACA,WAAA,QAAA,CAAA,MAAA,CAAA,OAAA,CAAA,UAAA,CAAA;AAAA,eAAA,GAAA,IAAA,CAAA,CAAA,OAAA,CAAA;AAAA,OAAA;AACA,aAAA,GAAA;AACA;AAvDA,GAlCA;AA2FA,EAAA,aA3FA,2BA2FA;AACA,IAAA,aAAA,CAAA,KAAA,QAAA,CAAA;AACA,GA7FA;AA8FA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,yBACA;AAAA;;AACA,UAAA,MAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA,CADA,CAGA;;AACA,UAAA,WAAA,GAAA,KAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,UAAA,CAAA,EAAA;AACA,QAAA,CAAA,CAAA,MAAA,KAAA,IAAA,IAAA,CAAA,CAAA,MAAA,KAAA,SAAA;AACA,OAFA,CAAA;;AAIA,UAAA,WAAA,EAAA;AACA;AACA,OAVA,CAYA;;;AACA,UAAA,OAAA,GAAA,EAAA;AACA,WAAA,QAAA,CAAA,MAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,YAAA,YAAA,GAAA;AACA,UAAA,SAAA,EAAA,CAAA,CAAA,SADA;AAEA,UAAA,MAAA,EAAA,CAAA,CAAA,MAFA;AAGA,UAAA,MAAA,EAAA,IAHA;AAGA;AACA,UAAA,eAAA,EAAA,CAAA,CAAA,eAJA;AAKA,UAAA,cAAA,EAAA,CAAA,CAAA;AALA,SAAA;AAOA,QAAA,OAAA,CAAA,IAAA,CAAA,YAAA;AACA,OATA;AAWA,MAAA,UAAA,CAAA,GAAA,gBAAA,MAAA,mBAAA;AACA,QAAA,OAAA,EAAA,OADA;AAEA,QAAA,QAAA,EAAA,KAAA,QAFA;AAGA,QAAA,KAAA,EAAA,KAAA,cAAA,GAAA,GAHA;AAIA,QAAA,gBAAA,EAAA,KAAA,QAAA,CAAA,gBAJA;AAKA,QAAA,YAAA,EAAA,KAAA,KAAA,CAAA,IAAA,CAAA;AALA,OAAA,EAOA,IAPA,CAOA,UAAA,CAAA,EAAA;AACA,QAAA,CAAA;;AACA,QAAA,MAAA,CAAA,OAAA,CAAA,EAAA,CAAA;AAAA,UAAA,IAAA,EAAA,YAAA;AAAA,UAAA,MAAA,EAAA;AAAA,YAAA,EAAA,EAAA;AAAA;AAAA,SAAA;;AACA,QAAA,MAAA,CAAA,OAAA,CAAA;AACA,UAAA,KAAA,EAAA,gCADA;AAEA,UAAA,IAAA,EAAA,EAFA;AAGA,UAAA,IAAA,EAAA;AAHA,SAAA;;AAMA,QAAA,aAAA,CAAA,MAAA,CAAA,QAAA,CAAA;AACA,OAjBA,EAkBA,KAlBA,CAkBA,UAAA,CAAA,EAAA;AACA,QAAA,MAAA,CAAA,OAAA,CAAA;AACA,UAAA,KAAA,EAAA,yBADA;AAEA,UAAA,IAAA,EAAA,CAFA;AAGA,UAAA,IAAA,EAAA;AAHA,SAAA;;AAMA,QAAA,aAAA,CAAA,MAAA,CAAA,QAAA,CAAA;AACA,OA1BA;AA2BA,KArDA;AAsDA,IAAA,SAtDA,qBAsDA,gBAtDA,EAsDA;AAAA;;AACA,UAAA,MAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA;AAEA,UAAA,OAAA,GAAA,EAAA;AACA,WAAA,QAAA,CAAA,MAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,YAAA,YAAA,GAAA;AACA,UAAA,SAAA,EAAA,CAAA,CAAA,SADA;AAEA,UAAA,MAAA,EAAA,CAAA,CAAA,MAFA;AAGA,UAAA,MAAA,EAAA,CAAA,CAAA,MAAA,KAAA,IAAA,IAAA,CAAA,CAAA,MAAA,KAAA,SAAA,GAAA,KAAA,GAAA;AAHA,SAAA;AAKA,QAAA,OAAA,CAAA,IAAA,CAAA,YAAA;AACA,OAPA;AASA,MAAA,UAAA,CAAA,GAAA,gBAAA,MAAA,GAAA;AACA,QAAA,OAAA,EAAA,OADA;AAEA,QAAA,gBAAA,EAAA,KAAA,QAAA,CAAA;AAFA,OAAA,EAIA,IAJA,CAIA,UAAA,CAAA,EAAA;AACA,QAAA,CAAA;AACA,YAAA,gBAAA,EACA,MAAA,CAAA,OAAA,CAAA;AACA,UAAA,KAAA,EAAA,yBADA;AAEA,UAAA,IAAA,EAAA,wCAFA;AAGA,UAAA,IAAA,EAAA;AAHA,SAAA;AAKA,OAZA,EAaA,KAbA,CAaA,UAAA,CAAA,EAAA;AACA,QAAA,MAAA,CAAA,OAAA,CAAA;AACA,UAAA,KAAA,EAAA,mBADA;AAEA,UAAA,IAAA,EAAA,CAFA;AAGA,UAAA,IAAA,EAAA;AAHA,SAAA;;AAMA,QAAA,aAAA,CAAA,MAAA,CAAA,QAAA,CAAA;AACA,OArBA;AAsBA;AAzFA;AA9FA,CAAA","sourcesContent":["<template>\n  <div>\n    <div class=\"test-marker-grid\">\n      <div class=\"test-marker-channel-1\">\n        <div class=\"test-marker-score-overview\">\n          <div class=\"score-section\">\n            <h5>Overall Score</h5>\n            <span\n              >{{ Correct }}/{{ CalculatedTotalMarks }}\n              <span style=\"font-size: 11px\">({{ CorrectPercent }}%)</span></span\n            >\n          </div>\n          <div class=\"score-section\">\n            <h5>Boundaries</h5>\n            <ul class=\"boundary-list\">\n              <li\n                :class=\"\n                  CorrectPercent >= TestData.TestType.high_pass_rate * 100\n                    ? 'boundary-text-active'\n                    : 'boundary-text'\n                \"\n              >\n                Distinction {{ TestData.TestType.high_pass_rate * 100 }}%\n              </li>\n              <li\n                :class=\"\n                  CorrectPercent >= TestData.TestType.pass_rate * 100 &&\n                  CorrectPercent < TestData.TestType.high_pass_rate * 100\n                    ? 'boundary-text-active'\n                    : 'boundary-text'\n                \"\n              >\n                Pass {{ TestData.TestType.pass_rate * 100 }}%\n              </li>\n            </ul>\n          </div>\n          <div class=\"score-section\">\n            <h5>Overall Decision</h5>\n            <span>{{ Decision }}</span>\n          </div>\n          <div\n            :class=\"\n              !TestData.final_results_submitted\n                ? 'secondary-button pointer'\n                : 'inactive-button notallowed-pointer'\n            \"\n            data-target=\"#exampleModalLong\"\n            data-toggle=\"modal\"\n          >\n            Submit Marks\n          </div>\n          <div\n            style=\"margin-top: 12px\"\n            class=\"pointer tertiary-button\"\n            @click=\"saveMarks(true)\"\n            v-show=\"!TestData.final_results_submitted\"\n          >\n            Save Marks\n          </div>\n        </div>\n      </div>\n\n      <div class=\"test-marker-channel-2\">\n        <div class=\"test-marker-test-overview\">\n          <div class=\"overview-header\">\n            <h5>\n              {{\n                !TestData.final_results_submitted\n                  ? \"Pending Results\"\n                  : \"Already Marked\"\n              }}\n            </h5>\n            <h4>{{ TestData.TestType.test_type_name }}</h4>\n            <p>{{ TestData.TestType.test_type_description }}</p>\n            <DataRow\n              v-if=\"false\"\n              :fieldName=\"'Editor Comments'\"\n              :fieldData=\"TestData.candidate_comments\"\n            />\n          </div>\n          <hr v-show=\"false\" />\n          <div class=\"overview-field-grid\">\n            <div>\n              <DataRow\n                :fieldName=\"'Email'\"\n                :fieldData=\"\n                  TestData.candidate_email ? TestData.candidate_email : '-'\n                \"\n              />\n              <DataRow\n                :fieldName=\"'ProofedID'\"\n                :fieldData=\"TestData.proofed_id\"\n                :linkURL=\"`https://team.getproofed.com/editors/edit/${TestData.proofed_id}`\"\n              />\n              <DataRow\n                :fieldName=\"'Attempt Num'\"\n                :fieldData=\"TestData.attempt_num\"\n              />\n            </div>\n            <div>\n              <DataRow\n                :fieldName=\"'Track Change & Clean Copy'\"\n                :fieldData=\"\n                  TestData.track_change_url\n                    ? 'Click to Download'\n                    : 'Not Uploaded'\n                \"\n                :linkURL=\"TestData.track_change_url\"\n              />\n              <!-- <DataRow\n                :fieldName=\"'Clean Copy'\"\n                :fieldData=\"\n                  TestData.clean_copy_url ? 'Click to Download' : 'Not Uploaded'\n                \"\n                :linkURL=\"TestData.clean_copy_url\"\n              /> -->\n              <DataRow\n                v-if=\"true\"\n                :fieldName=\"'Editor Comments'\"\n                :fieldData=\"TestData.candidate_comments\"\n              />\n            </div>\n          </div>\n        </div>\n\n        <div class=\"test-marker-test-overview\" style=\"margin-top: 12px\">\n          <span style=\"font-size: 12px; margin: 0 0 20px 12px\">Comments</span>\n          <textarea\n            :disabled=\"TestData.final_results_submitted\"\n            type=\"textarea\"\n            v-model=\"TestData.general_comments\"\n            class=\"tt-text-area\"\n            placeholder=\"Comments to Candidate\"\n          />\n        </div>\n\n        <div class=\"marking-tool\">\n          <table class=\"marking-tool-table\">\n            <thead>\n              <td>Q. Num</td>\n              <td v-if=\"ShowCommentsColumn\">Editor Comments</td>\n              <td>Reviewer Remarks</td>\n              <td width=\"90\">\n                <img\n                  @click=\"saveMarks(true)\"\n                  style=\"margin: 0 auto; cursor: pointer\"\n                  src=\"https://aux4.iconspalace.com/uploads/950447276790987536.png\"\n                  width=\"30\"\n                  v-show=\"!TestData.final_results_submitted\"\n                />\n              </td>\n            </thead>\n\n            <tr\n              v-for=\"Result in TestData.Result\"\n              :key=\"Result.ID\"\n              :style=\"\n                Result.passed === true\n                  ? 'background-color: #AADBC9'\n                  : Result.passed === false\n                  ? 'background-color: #FFE1E1'\n                  : ''\n              \"\n            >\n              <td>{{ Result.question_id }} {{ Result.marks }} mark</td>\n              <td v-if=\"ShowCommentsColumn\">{{ Result.editor_comments }}</td>\n              <td>{{ Result.marker_remarks }}</td>\n              <td>\n                <label\n                  class=\"default-radio\"\n                  v-show=\"!TestData.final_results_submitted\"\n                >\n                  <input type=\"radio\" :value=\"false\" v-model=\"Result.passed\" />\n                </label>\n\n                <label\n                  :class=\"{ redborder: false === true }\"\n                  v-show=\"!TestData.final_results_submitted\"\n                >\n                  <input type=\"radio\" :value=\"true\" v-model=\"Result.passed\" />\n                </label>\n              </td>\n            </tr>\n          </table>\n        </div>\n      </div>\n    </div>\n\n    <SaveModal\n      @onSubmit=\"submitMarks()\"\n      :alreadyMarked=\"TestData.final_results_submitted\"\n    />\n    <div id=\"save-snackbar\" class=\"snackbar\">Test Successfully Saved</div>\n    <div id=\"submitted-snackbar\" class=\"snackbar\">\n      Test Successfully Submitted\n    </div>\n  </div>\n</template>\n\n<script>\nimport DataRow from \"../components/DataRow.vue\";\nimport FileIcon from \"../components/FileIcon.vue\";\nimport SaveModal from \"../components/SaveModal.vue\";\nimport Repository from \"../services/Repository\";\n\nexport default {\n  data() {\n    return {\n      CommentLengthBreakpoint: 60,\n      TestData: {},\n      testLoaded: false,\n    };\n  },\n  components: {\n    DataRow,\n    FileIcon,\n    SaveModal,\n  },\n  name: \"TestMarker\",\n  created() {\n    //fetch the test data\n    let test_id = this.$route.params.id;\n\n    Repository.get(`test/${test_id}`)\n      .then((r) => {\n        this.TestData = r.data;\n        this.testLoaded = true;\n\n        if (!this.TestData.final_results_submitted)\n          this.autosave = setInterval(() => this.saveMarks(false), 10000);\n      })\n      .catch((e) => e);\n  },\n  mounted() {\n    //Should only auto save for the assigned user\n    let assigned_user_is_authed_user =\n      this.TestData.marker_email == this.$auth.user.email;\n    if (!assigned_user_is_authed_user) clearInterval(this.autosave);\n  },\n  computed: {\n    ShowCommentsColumn() {\n      return this.TestData.Result.some((r) => r.editor_comment != \"\");\n    },\n    Decision() {\n      if (!this.testLoaded) {\n        return \"Loading...\";\n      }\n\n      if (this.CorrectPercent / 100 >= this.TestData.TestType.high_pass_rate) {\n        return \"Distinction\";\n      } else if (\n        this.CorrectPercent / 100 >=\n        this.TestData.TestType.pass_rate\n      ) {\n        return \"Pass\";\n      } else if (\n        this.CorrectPercent / 100 >=\n        this.TestData.TestType.fail_rate\n      ) {\n        return \"Fail\";\n      } else {\n        return \"Fail\";\n      }\n    },\n    Correct() {\n      return (\n        this.testLoaded &&\n        this.TestData.Result.filter((q) => q.passed)\n          .map((q) => q.marks)\n          .reduce((a, b) => a + b, 0)\n      );\n    },\n    CorrectPercent() {\n      return (\n        this.testLoaded &&\n        ((this.Correct / this.CalculatedTotalMarks) * 100).toFixed(1)\n      );\n    },\n    NumUnmarked() {\n      return (\n        this.testLoaded &&\n        this.TestData.Result.filter(\n          (q) => q.passed === undefined || q.passed === null\n        ).length\n      );\n    },\n    CalculatedTotalMarks() {\n      if (!this.testLoaded) {\n        return 0;\n      }\n\n      let sum = 0;\n      this.TestData.Result.forEach((r) => (sum += r[\"marks\"]));\n      return sum;\n    },\n  },\n  beforeDestroy() {\n    clearInterval(this.autosave);\n  },\n  methods: {\n    submitMarks() {\n      let testID = this.$route.params.id;\n\n      //verify that all questions are assessed\n      let anyUnmarked = this.TestData.Result.some((r) => {\n        r.passed === null || r.passed === undefined;\n      });\n\n      if (anyUnmarked) {\n        return;\n      }\n\n      //compile the results\n      let results = [];\n      this.TestData.Result.forEach((r) => {\n        let resultObject = {\n          result_id: r.result_id,\n          passed: r.passed,\n          marked: true, //above logic should guarantee that this is always true\n          editor_comments: r.editor_comments,\n          marker_remarks: r.marker_remarks,\n        };\n        results.push(resultObject);\n      });\n\n      Repository.put(`test/${testID}?submit=true`, {\n        results: results,\n        decision: this.Decision,\n        score: this.CorrectPercent / 100,\n        general_comments: this.TestData.general_comments,\n        marker_email: this.$auth.user.email,\n      })\n        .then((r) => {\n          r;\n          this.$router.go({ name: \"MarkedTest\", params: { id: testID } });\n          this.$notify({\n            title: \"Results Successfully Submitted\",\n            text: \"\",\n            type: \"info\",\n          });\n\n          clearInterval(this.autosave);\n        })\n        .catch((e) => {\n          this.$notify({\n            title: \"Error Submitted Results\",\n            text: e,\n            type: \"error\",\n          });\n\n          clearInterval(this.autosave);\n        });\n    },\n    saveMarks(showNotification) {\n      let testID = this.$route.params.id;\n\n      let results = [];\n      this.TestData.Result.forEach((r) => {\n        let resultObject = {\n          result_id: r.result_id,\n          passed: r.passed,\n          marked: r.passed === null || r.passed === undefined ? false : true,\n        };\n        results.push(resultObject);\n      });\n\n      Repository.put(`test/${testID}`, {\n        results: results,\n        general_comments: this.TestData.general_comments,\n      })\n        .then((r) => {\n          r;\n          if (showNotification)\n            this.$notify({\n              title: \"Test Successfully Saved\",\n              text: \"Results will be here when you get back\",\n              type: \"info\",\n            });\n        })\n        .catch((e) => {\n          this.$notify({\n            title: \"Error Saving Test\",\n            text: e,\n            type: \"error\",\n          });\n\n          clearInterval(this.autosave);\n        });\n    },\n  },\n};\n</script>\n\n<style lang=\"sass\" scoped>\n.test-marker-grid\n    display: grid\n    margin-top: 60px\n    margin-right: calc(min(100px, 4vw))\n    margin-left: calc(min(100px, 4vw))\n    grid-template-columns: 2fr 10fr\n\n\n.save-overview:hover\n    background-color: rgba(0, 30, 98, 0.25)\n\n.test-marker-score-overview\n    padding: 24px\n    background: white\n    width: 90%\n    margin: 0 12px 0 12px\n    position: fixed\n    top: 138px\n    width: 14vw\n\n    .score-section\n        margin: 12px 0 20px 0\n\n    span\n        font-size: 18px\n\n\n.overview-field-grid\n    display: grid\n    grid-template-columns: 1fr 1fr\n    grid-column-gap: 40px\n\n@media only screen and (max-width: 900px)\n    .test-marker-grid\n        grid-template-columns: 1fr\n\n    .test-marker-score-overview\n        margin-bottom: 24px\n        position: static\n        width: calc(100% - 50px)\n\n    .test-marker-test-overview\n        margin-top: 34px\n\n    .overview-field-grid\n        grid-template-columns: 1fr\n\n.test-marker-test-overview\n    background: white\n    width: 90%\n    margin: 0 12px 0 12px\n    padding: 24px\n\n.marking-tool\n    width: 90%\n    margin: 12px 12px 0 12px\n\n.marking-tool-table\n    font-size: 14px\n    width: 100%\n    margin-bottom: 60px\n\n    thead\n        background-color: #212065\n        color: white\n\n    tr\n      background: white\n      color: rgba(33, 32, 101, 1)\n      font-size: 0.95em\n      border-bottom: 1px solid lightgrey\n\n    td\n        padding: 10px\n\nh4\n    font-weight: 400\n\nh5\n    margin-bottom: 2px\n    color: rgba(97, 116, 160, 1)\n    font-size: 13px\n    font-weight: 400\n\n.default-radio\n    font-size: 24px\n    color: red\n    margin: 0 20px 0 20px\n\ninput[type=\"radio\"]\n    -ms-transform: scale(2)\n    -webkit-transform: scale(2)\n    transform: scale(2)\n\n    .correct[type=\"radio\"]:after\n        border: 2px solid red\n        background-color: #d1d3d1\n\n.pointer\n    cursor: pointer\n\n.notallowed-pointer\n  cursor: not-allowed\n\n.snackbar\n    visibility: hidden\n    min-width: 250px\n    margin-left: -125px\n    background-color: #333\n    color: #fff\n    text-align: center\n    border-radius: 2px\n    padding: 16px\n    position: fixed\n    z-index: 1\n    left: 50%\n    bottom: 30px\n    &.show\n      visibility: visible\n      -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s\n      animation: fadein 0.5s, fadeout 0.5s 2.5s\n\n.tt-text-area\n  background: #FFFFFF\n  border: 1px solid #92A0BF\n  box-sizing: border-box\n  border-radius: 22px\n  padding: 4px 20px\n  min-height: 40px\n  width: 100%\n  font-size: 16px\n  line-height: 28px\n  resize: vertical\n  overflow: visible\n\n.boundary-list\n  padding-left: 18px\n\n.boundary-text\n  font-size: 10pt !important\n  color: #92A0BF\n\n\n.boundary-text-active\n  font-size: 10pt !important\n  font-weight: 400\n  color: #212065\n</style>\n"],"sourceRoot":"src/views"}]}